{"componentChunkName":"component---src-components-blogs-blog-detail-js","path":"/blog/flutter-lets-you-build-cross-platform-apps","result":{"pageContext":{"post":{"id":"96db6ef9-d27e-594a-b184-a2fea9ac845a","title":"Flutter lets you build cross platform apps — But What About ‘Design’?","excerpt":"Flutter UI/UX design guide to build better and consistent UI/UX of the Flutter cross-platform apps- Android and iOS. Design your Flutter UI with guide now.","_rawBody":[{"_key":"67134d98007d","_type":"block","children":[{"_key":"5c522bc61f0a","_type":"span","marks":["em","9f78a1320ceb"],"text":"Our product development company"},{"_key":"e25f6e82580c","_type":"span","marks":["em"],"text":" has engineered a handful of "},{"_key":"969ffcb47b65","_type":"span","marks":["em","3ab2e177b5b0"],"text":"cross platform applications using Flutter"},{"_key":"f60fed1066fa","_type":"span","marks":["em"],"text":". The number one question that I get every time, I talk to a startup founder or business owner is — Do we need to spend on creating separate designs for Android and iOS? How will we ensure we deliver a consistent experience across devices & platforms? This post is an attempt to address this concern. I will also discuss about what it means to truly deliver a cross platform experience when contexts vary."}],"markDefs":[{"_key":"9f78a1320ceb","_type":"link","href":"https://www.solutelabs.com/"},{"_key":"3ab2e177b5b0","_type":"link","href":"https://www.solutelabs.com/flutter-app-development-services"}],"style":"normal"},{"_key":"e004b4f34a3f","_type":"block","children":[{"_key":"54862f57686f0","_type":"span","marks":["d07d48250840"],"text":"Flutter"},{"_key":"5ca110bd967b","_type":"span","marks":[],"text":" has come a long way since its Launch in May 2017. In fact, it has conveniently, morphed into a multi-platform app development framework. Besides developing cross platform apps, Flutter now allows you to build apps for desktop, "},{"_key":"7e044a83f121","_type":"span","marks":["6bdd6eea811f"],"text":"web"},{"_key":"1d9aec741627","_type":"span","marks":[],"text":" and even embedded devices."}],"markDefs":[{"_key":"6bdd6eea811f","_type":"link","href":"https://www.solutelabs.com/blog/flutter-for-web-an-ultimate-guide"},{"_key":"d07d48250840","_type":"link","href":"https://www.solutelabs.com/blog/flutter-tutorial-for-beginners-step-by-step-guide"}],"style":"normal"},{"_key":"f7830ed9b2df","_type":"block","children":[{"_key":"6d4b9fa5d8810","_type":"span","marks":[],"text":"Also, "},{"_key":"dadbed61a4d8","_type":"span","marks":["ab2fbf78b373"],"text":"the number of Flutter apps"},{"_key":"830182e48d86","_type":"span","marks":[],"text":" on Google Play Store has steadily risen to around 90,000, clearly depicting its popularity. "},{"_key":"6d4b9fa5d8811","_type":"span","marks":["c4861abd2d88"],"text":"April 2020, saw around 80% spike in the number of Flutter-built apps."},{"_key":"6d4b9fa5d8812","_type":"span","marks":[],"text":" Across the globe, close to "},{"_key":"6d4b9fa5d8813","_type":"span","marks":["4ae3eea6dbf7"],"text":"2 million developers"},{"_key":"6d4b9fa5d8814","_type":"span","marks":[],"text":" use Flutter to build a variety of cross-platform apps for startups, enterprises etc."}],"markDefs":[{"_key":"c4861abd2d88","_type":"link","href":"https://www.theregister.com/2020/08/05/google_reports_80_increase_in/"},{"_key":"4ae3eea6dbf7","_type":"link","href":"https://medium.com/flutter/flutter-spring-2020-update-f723d898d7af"},{"_key":"ab2fbf78b373","_type":"link","href":"https://www.solutelabs.com/blog/fourteen-of-the-best-apps-built-using-flutter"}],"style":"normal"},{"_key":"dd05556ba984","_type":"block","children":[{"_key":"8d40680cc685","_type":"span","marks":[],"text":"However, one can’t help but think about -"}],"markDefs":[],"style":"normal"},{"_key":"3fe7e8bc44b9","_type":"customBlockQuote","customblockArray":[{"_key":"7bebe86ab8f5","_type":"block","children":[{"_key":"71dd4c07394d","_type":"span","marks":[],"text":"What happens to the UI/UX design of a Flutter-based app?"}],"markDefs":[],"style":"normal"}]},{"_key":"45a801943ad0","_type":"block","children":[{"_key":"67d631c5f82b","_type":"span","marks":[],"text":"More importantly,"}],"markDefs":[],"style":"normal"},{"_key":"667f571644fa","_type":"customBlockQuote","customblockArray":[{"_key":"583cb82098f2","_type":"block","children":[{"_key":"67e3af8f8657","_type":"span","marks":[],"text":"How will you manage two different UI in a single code-base? You can’t take the ‘if/else’ route everywhere. Does Flutter render the iOS Cupertino style on iOS and Material on Android with a single codebase. I need to know this before starting to develop my app with Flutter."}],"markDefs":[],"style":"normal"}]},{"_key":"f2f84f6b154b","_type":"block","children":[{"_key":"c6c43f6cdf40","_type":"span","marks":[],"text":"Since Flutter allows developers to churn out multi-platform applications with a single code-base, business owners often worry about how do we ensure that the "},{"_key":"5a1470d350b7","_type":"span","marks":["5f3805364899"],"text":"UI/UX design"},{"_key":"cf7a58d6cc76","_type":"span","marks":[],"text":" looks flawless and consistent across devices."}],"markDefs":[{"_key":"5f3805364899","_type":"link","href":"https://www.solutelabs.com/ui-ux-app-design"}],"style":"normal"},{"_key":"6a5b2191c601","_type":"block","children":[{"_key":"b2d6ce36f5780","_type":"span","marks":[],"text":"You, know, there is a sea of devices in the market with different screen sizes and resolutions. "},{"_key":"b2d6ce36f5781","_type":"span","marks":["em"],"text":"How are you supposed to factor that in?"},{"_key":"b2d6ce36f5782","_type":"span","marks":[],"text":" And, I haven’t even talked about the orientation — landscape or portrait."}],"markDefs":[],"style":"normal"},{"_key":"6c87542fdd56","_type":"block","children":[{"_key":"9427b75a537d0","_type":"span","marks":["96a8570b082b"],"text":"Take a look at this"},{"_key":"9427b75a537d1","_type":"span","marks":[],"text":" and you will understand what I am talking about. And, that’s just iOS. When you start thinking about Android, you will be like -"}],"markDefs":[{"_key":"96a8570b082b","_type":"link","href":"https://ios-resolution.com/"}],"style":"normal"},{"_key":"87a37685ae40","_type":"customImage","asset":{"_ref":"image-88e7e49d8ec6b057bd3564430eea2c96b3dc9ef3-245x141-gif","_type":"reference"}},{"_key":"f4107de9510b","_type":"block","children":[{"_key":"862f45ab31db","_type":"span","marks":[],"text":"Device fragmentation adds a very deep layer of complexity when you do both design and development for any application."}],"markDefs":[],"style":"normal"},{"_key":"16151909e83e","_type":"block","children":[{"_key":"c3f4bf2d0a2a0","_type":"span","marks":[],"text":"There are now more than 24,000 distinct android devices in the market. That’s "},{"_key":"e771a4b8d9e8","_type":"span","marks":["128575d22545"],"text":"six times than"},{"_key":"bd826303a8b2","_type":"span","marks":[],"text":" what was in 2012."}],"markDefs":[{"_key":"128575d22545","_type":"link","href":"https://www.opensignal.com/sites/opensignal-com/files/data/reports/global/data-2015-08/2015_08_fragmentation_report.pdf"}],"style":"h4"},{"_key":"7fdd909b790f","_type":"customImage","asset":{"_ref":"image-0025323841e24df749c2b7fb2c2a6e3162cf9078-940x632-png","_type":"reference"},"imageFigcaptionName":"Source: Open Signal"},{"_key":"2606dd36ecdf","_type":"block","children":[{"_key":"d17d9075e2a30","_type":"span","marks":["em"],"text":"This can make anyone crazy."}],"markDefs":[],"style":"normal"},{"_key":"f846a78b1025","_type":"block","children":[{"_key":"5f133255c04a0","_type":"span","marks":[],"text":"If you are any business like Easy Diet Diary, you would want to have a great iOS & Android mobile app that delivers a native-like experience, offers solid performance and still saves your money."}],"markDefs":[],"style":"normal"},{"_key":"3d9ec3b0270b","_type":"block","children":[{"_key":"c32d89f0885b0","_type":"span","marks":["em"],"text":"One single code base can deliver this consistency -"}],"markDefs":[],"style":"normal"},{"_key":"d39bc02fe6bd","_type":"customImage","asset":{"_ref":"image-1d2462e98f713ed06ee02da16fc1aa88c882e7f5-1200x627-png","_type":"reference"},"imageFigcaptionName":"Easy Diet Diary Android & iOS Version built on Flutter"},{"_key":"bb89f1948ec3","_type":"block","children":[{"_key":"cadfbc757ec8","_type":"span","marks":[],"text":"The UI/UX looks strikingly similar except for some differences like alignment of text, up bar, bottom navigation etc. of the respective platforms."}],"markDefs":[],"style":"normal"},{"_key":"c18065cc2f79","_type":"block","children":[{"_key":"2e9f1d34f6150","_type":"span","marks":["em"],"text":"(Note — If you want to learn more about the UI differences between Android and iOS,"},{"_key":"2e9f1d34f6151","_type":"span","marks":[],"text":" "},{"_key":"2e9f1d34f6152","_type":"span","marks":["020b89537cb8","em"],"text":"here is a good article about it."},{"_key":"2e9f1d34f6153","_type":"span","marks":["em"],"text":")"}],"markDefs":[{"_key":"020b89537cb8","_type":"link","href":"https://learnui.design/blog/ios-vs-android-app-ui-design-complete-guide.html"}],"style":"normal"},{"_key":"7ef3be799dd4","_type":"block","children":[{"_key":"881640dbf81e","_type":"span","marks":[],"text":"Platform Aware Widgets"}],"markDefs":[],"style":"h2"},{"_key":"f569f09c0477","_type":"block","children":[{"_key":"8448ba7964e40","_type":"span","marks":[],"text":"In case you want to keep your users in their defined environment and want to follow Material Design for Android & Cupertino Style for iOS, you can do so by using "},{"_key":"17f431faacb4","_type":"span","marks":["f0cc2ede0add"],"text":"Flutter widgets"},{"_key":"540f06625b2d","_type":"span","marks":[],"text":". There are "},{"_key":"e5c7686f1d74","_type":"span","marks":["f6012bbc7bf1"],"text":"packages you can rely on which are equipped with native iOS & Android widgets"},{"_key":"6cbcd9142287","_type":"span","marks":[],"text":" to help your app give a platform-specific look."}],"markDefs":[{"_key":"f6012bbc7bf1","_type":"link","href":"https://flutter.dev/docs/development/ui/widgets-intro"},{"_key":"f0cc2ede0add","_type":"link","href":"https://www.solutelabs.com/blog/flutter-widgets-a-brief-guide"}],"style":"normal"},{"_key":"8d7fe50bdf6d","_type":"customImage","asset":{"_ref":"image-6da3a9a00e1f619234e7d324d81eb1d8ab1d8144-1200x627-png","_type":"reference"},"imageFigcaptionName":"iOS and Material Widgets"},{"_key":"78c1cbd92786","_type":"block","children":[{"_key":"043bcf216530","_type":"span","marks":[],"text":"But, one question arises when you go ahead with this approach -"}],"markDefs":[],"style":"normal"},{"_key":"13ee27357ace","_type":"customBlockQuote","customblockArray":[{"_key":"f3f9eb012a26","_type":"block","children":[{"_key":"cdbf3607c3ac","_type":"span","marks":[],"text":"Why not go for the native way and still have some reusable code?"}],"markDefs":[],"style":"normal"}]},{"_key":"c5cbea4c17a5","_type":"block","children":[{"_key":"8902da6a349f","_type":"span","marks":[],"text":"On the surface, it looks like a fair and simple question. You can go this way but you will be making a costly mistake. There will actually be two implementations. Exactly the opposite of what you want. Your dream of re-using the native code will disappear in thin air because both iOS & Android have different needs in terms of initialisation and dependencies."}],"markDefs":[],"style":"normal"},{"_key":"fbeff7891bd8","_type":"block","children":[{"_key":"094778839410","_type":"span","marks":[],"text":"What is Adaptive UI/UX?"}],"markDefs":[],"style":"h2"},{"_key":"e8c9f74ed927","_type":"block","children":[{"_key":"0d4f92c55381","_type":"span","marks":[],"text":"Before technological advancements, designers used to only make web-based versions. As different devices rolled out, designers began customising for mobiles and tablets. Cross platform experiences are designed revolving around these scenarios."}],"markDefs":[],"style":"normal"},{"_key":"7b8f6754e5ee","_type":"block","children":[{"_key":"80bcafd08816","_type":"span","marks":[],"text":"Rody Davis, a developer advocate at Google, very succinctly explains what adaptive ui/ux means -"}],"markDefs":[],"style":"normal"},{"_key":"664949247c2a","_type":"customBlockQuote","customblockArray":[{"_key":"622002960f0a","_type":"block","children":[{"_key":"24b8eae7b0bf","_type":"span","marks":[],"text":"When we build UI we need to create adaptive experiences that go from a watch, passive modes on a TV or voice only, mobile devices, desktops and everything in between. It takes extra work but if you follow these patterns you will save a lot of time later."}],"markDefs":[],"style":"normal"}]},{"_key":"838867cba112","_type":"block","children":[{"_key":"6a3a16ea63a4","_type":"span","marks":[],"text":"Flutter, as I discussed earlier, is becoming an all-platform framework. What about when you want to go smaller or bigger? Imagine Watch or TV."}],"markDefs":[],"style":"normal"},{"_key":"03ce78c1f370","_type":"customImage","asset":{"_ref":"image-75c44bf3d12a6fe7aed16a8eedd3e321280bc58c-1278x772-png","_type":"reference"},"imageFigcaptionName":"Source: Google I/O Talk"},{"_key":"b332aa78621a","_type":"block","children":[{"_key":"fdeb13c43bbe0","_type":"span","marks":[],"text":"Consider foldable phones for that matter. Flutter supports that too."}],"markDefs":[],"style":"normal"},{"_key":"b41afa1f2239","_type":"customBlockQuote","customblockArray":[{"_key":"d753d0fe4f78","_type":"block","children":[{"_key":"aaa3ac479994","_type":"span","marks":[],"text":"Adaptive layouts are precisely all about how your app appropriately displays the UI on the device it is being viewed on."}],"markDefs":[],"style":"normal"}]},{"_key":"f94df4b6de11","_type":"block","children":[{"_key":"473fda7ac0d1","_type":"span","marks":[],"text":"You no longer need to build separately for these multitude of devices. Flutter already supports that using a single code-base."}],"markDefs":[],"style":"normal"},{"_key":"11c8832734ca","_type":"customImage","asset":{"_ref":"image-a1040a44f0db91f0b092f57b5460df999da43085-1253x779-png","_type":"reference"}},{"_key":"29b7ba56278d","_type":"block","children":[{"_key":"83b082487480","_type":"span","marks":[],"text":"How do you design these adaptive experiences?"}],"markDefs":[],"style":"h2"},{"_key":"169459a8e7f0","_type":"block","children":[{"_key":"9947a344e53d0","_type":"span","marks":[],"text":"Here are some guidelines to consider-"}],"markDefs":[],"style":"normal"},{"_key":"db8285efdde3","_type":"block","children":[{"_key":"6fe1f7ddda63","_type":"span","marks":[],"text":"Looking for opportunities to design adaptive components. These are discrete collections of shared elements. It’s like using the same atoms in different molecules."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"8a2101508fa7","_type":"customImage","asset":{"_ref":"image-b9eb242e6fef259ca6133e702075866897b48982-1100x525-png","_type":"reference"},"imageFigcaptionName":"Source — Google I/O Talk"},{"_key":"73eb528e6a4e","_type":"block","children":[{"_key":"5b4ca75a23a5","_type":"span","marks":[],"text":"Consider adaptive components like designing for multiple experiences using the same content. When designers come up with these concepts, you should consider when it makes to sense to develop widgets for the same that automatically adapt to different cases."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"e2ea379aa36d","_type":"block","children":[{"_key":"7be170a23d9b","_type":"span","marks":[],"text":"When you do build widgets based on these design concepts, avoid code complexity. For instance, if only a few parameters change like text style and padding, you can wrap it with that logic in one widget."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"3b6be163d79f","_type":"block","children":[{"_key":"4727193a05e6","_type":"span","marks":[],"text":"In case there are structural differences in the layout, like one being a column and one being a stack — make different widgets for such design. This will make the layout simple and readable. Making widgets is fairly easy in Flutter."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"75ecbb572a1e","_type":"block","children":[{"_key":"6ea16d37473f","_type":"span","marks":[],"text":"Consider the above design example. There are 9 different cases. Which ones can have a shared code? The red box can be stack-based, blue box can be column-based and green one can be row-based. You can handle & build each of these differently depending on the case described. They can share the same data model."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"3bb4af0fb4a9","_type":"customImage","asset":{"_ref":"image-74ed9b9e19e7733b3e7b732d154ec73a8e6c80c1-1103x548-png","_type":"reference"}},{"_key":"60d690d6e3dc","_type":"block","children":[{"_key":"af5c8963f781","_type":"span","marks":[],"text":"You can have one widget for the following case. There are very few differences in terms of text alignment, image alignment and column. You can define custom attributes within the widget for differences."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"faf09bca8145","_type":"customImage","asset":{"_ref":"image-772fa08365959f0f6d49e61e3d550882a9f76011-1122x511-png","_type":"reference"}},{"_key":"df92353f8d82","_type":"block","children":[{"_key":"b12b74c73c63","_type":"span","marks":[],"text":"Desktop applications are way more interactive than let’s say a TV application. The desktop app will have more control elements compared to information elements in TV because you will access that app while sitting on a sofa. The UI will differ in such cases. "},{"_key":"56f6ff1c481f","_type":"span","marks":["em"],"text":"How will you determine the difference?"},{"_key":"3b9c82237d4e","_type":"span","marks":[],"text":" You can set up platform class that will help you determine it. Using plugins like "},{"_key":"93b2be47b942","_type":"span","marks":["5da7443a40f9"],"text":"Flutter_UI_Mode_Manager"},{"_key":"b776cc5bc694","_type":"span","marks":[],"text":" you can differentiate which platform a flutter application is running on, Phone, TV, Car, etc. One might even have a counter-top device in their home. While designing for such experiences, make sure the design is not much busy. On mobile, you might have a vertical list with scrolling but on the TV, you can use cards with horizontal scrolling and hover states (since people will use remote control)."}],"level":1,"listItem":"bullet","markDefs":[{"_key":"5da7443a40f9","_type":"link","href":"https://pub.dev/packages/flutter_ui_mode_manager"}],"style":"normal"},{"_key":"272231ca982c","_type":"customImage","asset":{"_ref":"image-d0c609314df2a87d534ba8b72e9c4bba64e1f630-1314x733-png","_type":"reference"}},{"_key":"d78792c7bc9b","_type":"block","children":[{"_key":"8a7ff762fa16","_type":"span","marks":[],"text":"One must also look at the relative text size. When users are interacting on mobile device, they are usually 1–3 feet away from the eyes. Whereas talking about TV, they are further apart at 10 feet or so. Therefore, having the same size on all devices isn’t going to make sense to your users. Applying relative sizing to the typeface will be crucial. In Flutter, to change text size globally, you can apply the Transition Builder."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"f898e89de1fd","_type":"customImage","asset":{"_ref":"image-490a891750fb92d89277f886f40f630782b47e17-1217x685-png","_type":"reference"}},{"_key":"0d69efed5181","_type":"customImage","asset":{"_ref":"image-6ceb897c3c47df5449e380a37160dd47e93e06a6-1135x628-png","_type":"reference"}},{"_key":"b6ef55973396","_type":"block","children":[{"_key":"f08340b13acc","_type":"span","marks":[],"text":"Navigation should also behave differently across devices. Mobile devices can have a short app bar whereas the tablet and web versions can showcase regular app bar. TV, might, not have an app bar at all. Based on use, you can accordingly make widgets."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"d9e853d0a495","_type":"customImage","asset":{"_ref":"image-837cf25f59254ce2d94b8482b602e5237e7da441-1011x523-png","_type":"reference"}},{"_key":"1d6bf9447846","_type":"customImage","asset":{"_ref":"image-0a1a99148becb3a8f725860da299b4953b0e8705-987x552-png","_type":"reference"}},{"_key":"ea6e3047f541","_type":"block","children":[{"_key":"430ed1b8fe37","_type":"span","marks":[],"text":"Take a look at the collective experience -"}],"markDefs":[],"style":"normal"},{"_key":"9c9ff956bca3","_type":"customImage","asset":{"_ref":"image-d70b0661ff5e25abc731b84282119fefd2b73f46-1399x760-png","_type":"reference"}},{"_key":"6945227812b9","_type":"block","children":[{"_key":"8d104167daaf","_type":"span","marks":["strong"],"text":"Watch Rody’s talk to understand the tradeoffs when you don’t go the adaptive UI way."}],"markDefs":[],"style":"h4"},{"_key":"3203cf32365d","_type":"youtube","url":"https://youtu.be/P1B52fRGjbE"},{"_key":"907ddb1b0a46","_type":"block","children":[{"_key":"0fe391a30e57","_type":"span","marks":[],"text":"Besides the above mentioned things, Screen Orientation another factor to consider when it comes to building adaptive UI. For instance, take a look at these screens -"}],"markDefs":[],"style":"normal"},{"_key":"4bcc391b870e","_type":"customImage","asset":{"_ref":"image-e8c42b7a7a25b5f57320bd793b7a4d8127139be7-884x464-png","_type":"reference"},"imageFigcaptionName":"Source — Flutter Europe Talk by Alexandr Denisov"},{"_key":"c2c93a1c4a05","_type":"block","children":[{"_key":"be032378067d0","_type":"span","marks":[],"text":"The screen shows a list of speakers. See how the UI behaves differently when the screen orientation changes."}],"markDefs":[],"style":"normal"},{"_key":"6ef356095233","_type":"customImage","asset":{"_ref":"image-d8922b34d8da388e2005e9f5cff378324da7c019-1056x490-png","_type":"reference"},"imageFigcaptionName":"Source — Flutter Europe Talk by Alexandr Denisov"},{"_key":"26ffa5870130","_type":"block","children":[{"_key":"46676de82ef20","_type":"span","marks":[],"text":"There is a widget called OrientationBuilder to make this happen."}],"markDefs":[],"style":"normal"},{"_key":"521a005e0be5","_type":"customImage","asset":{"_ref":"image-2e1c9afa7531777aff1f2aa97756b8775b293988-798x408-png","_type":"reference"},"imageFigcaptionName":"Source — Flutter Europe Talk by Alexandr Denisov"},{"_key":"d21e7624ad09","_type":"block","children":[{"_key":"418108574ed60","_type":"span","marks":[],"text":"You can also use different layout widgets depending on orientation needs."}],"markDefs":[],"style":"normal"},{"_key":"740803965058","_type":"block","children":[{"_key":"02471441878b","_type":"span","marks":["em"],"text":"If you want to learn more about adaptive design layouts, watch this episode of the The Boring Flutter Development Show."}],"markDefs":[],"style":"normal"},{"_key":"4c34ea92bde3","_type":"youtube","url":"https://youtu.be/n6Awpg1MO6M"},{"_key":"3cd792b3c061","_type":"block","children":[{"_key":"5d34fe6006bd0","_type":"span","marks":[],"text":"Is Flutter capable of rendering Material Widgets on iOS and Cupertino Widgets on Android?"}],"markDefs":[],"style":"h3"},{"_key":"6a4114b06369","_type":"block","children":[{"_key":"6f8a2d1b9b54","_type":"span","marks":[],"text":"Absolutely Yes."}],"markDefs":[]},{"_key":"1753ccb8612a","_type":"block","children":[{"_key":"93d864ef88970","_type":"span","marks":[],"text":"However, Material Theming adapts according to the conventions of iOS and Android. What this means is Flutter doesn’t show exactly the same thing on iOS and Android — like transitions and navigation animations including default fonts are not similar. But these are not big factors to bother your users."}],"markDefs":[],"style":"normal"},{"_key":"7c32763b9fe5","_type":"customImage","asset":{"_ref":"image-74b56118836b7bc0a0a7964a14ba5f16132da536-201x400-gif","_type":"reference"},"imageFigcaptionName":"Android Transitions"},{"_key":"71a4cbcb21f2","_type":"customImage","asset":{"_ref":"image-e3e01f99b0495ffc1f49277c0997e68aa86a3b74-185x400-gif","_type":"reference"},"imageFigcaptionName":"iOS Transitions"},{"_key":"55137b152618","_type":"block","children":[{"_key":"d4f6058e0548","_type":"span","marks":[],"text":"Learn more about platform adaptations "},{"_key":"178a645fab52","_type":"span","marks":["72ce801f0a4d"],"text":"here."}],"markDefs":[{"_key":"72ce801f0a4d","_type":"link","href":"https://flutter.dev/docs/resources/platform-adaptations"}],"style":"normal"},{"_key":"2bd0c10e6665","_type":"block","children":[{"_key":"6f83f5e8bdb70","_type":"span","marks":[],"text":"Now, when it comes to certain UI/UX choices, specific static elements can change. Take for example icons. These differ between iOS and Android."}],"markDefs":[{"_key":"72ce801f0a4d","_type":"link","href":"https://flutter.dev/docs/resources/platform-adaptations"}],"style":"normal"},{"_key":"0d5fc836c70f","_type":"block","children":[{"_key":"7307268605dd0","_type":"span","marks":[],"text":"App bar titles on the left in Android devices where on iOS these are in the middle. (on the left of the available space in case there is a back button or the button to open a Drawer ("},{"_key":"7307268605dd1","_type":"span","marks":["1105cc97bc1f"],"text":"explained here in the Material Design guidelines"},{"_key":"7307268605dd2","_type":"span","marks":[],"text":" and also known as a hamburger menu)."}],"markDefs":[{"_key":"1105cc97bc1f","_type":"link","href":"https://material.io/components/navigation-drawer"}],"style":"normal"},{"_key":"eed40596fc1a","_type":"block","children":[{"_key":"6ef32e8226ce0","_type":"span","marks":["em"],"text":"Here’s an example —"}],"markDefs":[],"style":"normal"},{"_key":"e576f6bd4a69","_type":"customImage","asset":{"_ref":"image-6d2381f05f8520ce1636afea2a1442ff676d4612-3000x2000-jpg","_type":"reference"}},{"_key":"132bd6c22e6f","_type":"block","children":[{"_key":"96cad4dd0493","_type":"span","marks":[],"text":"Are Adaptive Layouts same as Responsive?"}],"markDefs":[],"style":"h2"},{"_key":"f6b37e39df52","_type":"block","children":[{"_key":"5d2340372e510","_type":"span","marks":[],"text":"This article by UXPin very clearly describes the differences between adaptive and responsive design. Read the full article "},{"_key":"c3136121d12d","_type":"span","marks":["933b37c7f5b7"],"text":"here."}],"markDefs":[{"_key":"933b37c7f5b7","_type":"link","href":"https://www.uxpin.com/studio/blog/responsive-vs-adaptive-design-whats-best-choice-designers/#:~:text=So%20first%20up%2C%20what's%20the,matter%20what%20the%20target%20device.&text=Adaptive%20design%2C%20on%20the%20other,once%20they're%20initially%20loaded."}],"style":"normal"},{"_key":"a3e4e4719bfe","_type":"customBlockQuote","customblockArray":[{"_key":"c8bb86f1bced","_type":"block","children":[{"_key":"d87a98703594","_type":"span","marks":[],"text":"Responsive is fluid and adapts to the size of the screen no matter what the target device. Responsive uses "},{"_key":"8d11ecb38dae","_type":"span","marks":["f8ccdee564aa"],"text":"CSS media queries"},{"_key":"04a5c25ce5a1","_type":"span","marks":[],"text":" to change styles based on the target device such as display type, width, height, etc., and only one of these is necessary for the site to adapt to different screens."}],"markDefs":[{"_key":"f8ccdee564aa","_type":"link","href":"https://developers.google.com/web/fundamentals/layouts/rwd-fundamentals/use-media-queries?hl=en"}],"style":"normal"},{"_key":"8ae1be093d78","_type":"block","children":[{"_key":"edd5a56df0410","_type":"span","marks":[],"text":"Adaptive design, on the other hand, uses static layouts based on breakpoints which don’t respond once they’re initially loaded. Adaptive works to detect the screen size and load the appropriate layout for it."}],"markDefs":[],"style":"normal"}]},{"_key":"65f5d571071d","_type":"block","children":[{"_key":"193eb187c553","_type":"span","marks":[],"text":"Take help from Material Design System, Material Theming & Material Components"}],"markDefs":[],"style":"h3"},{"_key":"1abe3a2c956b","_type":"block","children":[{"_key":"c86957fd90c5","_type":"span","marks":[],"text":"Our main objective is to create a unique, custom UI for an app that works flawlessly and looks nice across iOS and Android devices. An increasing number of apps are relying on Google’s Material Design to achieve this goal. Use the Material Library and have adaptable UI elements for both operating systems."}],"markDefs":[],"style":"normal"},{"_key":"c1f94bd88ff0","_type":"block","children":[{"_key":"998bff1482cb0","_type":"span","marks":[],"text":"Design & development teams, globally, are using material design ( "},{"_key":"998bff1482cb1","_type":"span","marks":["0aaed6162026"],"text":"a design system created by Google"},{"_key":"998bff1482cb2","_type":"span","marks":[],"text":") to produce high quality experiences for Android, iOS, Web and Flutter. Material Components are like the building blocks of a user interface. Check these out "},{"_key":"998bff1482cb3","_type":"span","marks":["e12478688b5f"],"text":"here."}],"markDefs":[{"_key":"0aaed6162026","_type":"link","href":"https://material.io/"},{"_key":"e12478688b5f","_type":"link","href":"https://material.io/components"}]},{"_key":"ef543f13f3f0","_type":"block","children":[{"_key":"1b1749c1490d","_type":"span","marks":[],"text":"When you use Material Design to depict your product’s brand, you are essentially "},{"_key":"dfb13b030407","_type":"span","marks":["0d435a6ffd74"],"text":"Material Theming"},{"_key":"8e7b5797c822","_type":"span","marks":[],"text":" it."}],"markDefs":[{"_key":"0d435a6ffd74","_type":"link","href":"https://material.io/design/material-theming/overview.html#material-theming"}]},{"_key":"18e32fe2348e","_type":"customImage","asset":{"_ref":"image-64fe476b69535487bda6d3798ebf6fa43d9886d8-794x433-png","_type":"reference"},"imageFigcaptionName":"Source: Material Design Website"},{"_key":"b5702bb615d0","_type":"block","children":[{"_key":"03f19dcdebce","_type":"span","marks":[],"text":"A few cases"}],"markDefs":[],"style":"h3"},{"_key":"1d2dc803a303","_type":"block","children":[{"_key":"9f298cd837bd0","_type":"span","marks":["01547a0a82d4","strong"],"text":"Reflectly"},{"_key":"9f298cd837bd1","_type":"span","marks":[],"text":" is a mobile app (the journaling app helping people fight stress & anxiety) that migrated from React Native to Flutter. It recently, also, won the Material Design Award because of its fluid animations and custom components. It is targeted towards the instagram-generation which struggles to find a balance in life."}],"markDefs":[{"_key":"01547a0a82d4","_type":"link","href":"https://apps.apple.com/us/app/reflectly-journal-ai-diary/id1241229134"}],"style":"normal"},{"_key":"a34e487d6005","_type":"customImage","asset":{"_ref":"image-16de24cb56cc4dbaaae19487b2306104a20c324a-1200x627-png","_type":"reference"},"imageFigcaptionName":"iOS and Android Version of Reflectly"},{"_key":"cc7e829f92d9","_type":"block","children":[{"_key":"17d2538f0494","_type":"span","marks":[],"text":"The idea of having unified system for all interfaces inspired the founder Jacob Kristensen to adopt Material Design for Reflectly. Flutter allowed them to deliver powerful performances across devices coupled with fantatic UI experience. Listen to the podcast where the founder discusses how Material Design and Flutter played a huge role in delivering delightful experiences."}],"markDefs":[],"style":"normal"},{"_key":"ce37b7cf12e7","_type":"urllink","shortDescription":"This episode is part of a special series of four interviews with the winners of this year’s Material Design Awards, exploring what goes into creating an award-winning app.","title":"Design Notes: Reflectly - 2019 Material Design Awards","urlLink":"https://designnotes.fm/reflectly-2019-material-design-awards","urlLinkImage":{"_type":"customImage","asset":{"_ref":"image-b9da851763ccc472d3604d247d8be8ef7aee9c7f-96x96-png","_type":"reference"}}},{"_key":"287678c07e06","_type":"block","children":[{"_key":"c2b6201e2725","_type":"span","marks":[],"text":"Reflectly’s interface is full of artfully executed "},{"_key":"e16420e053d3","_type":"span","marks":["425f714f84db"],"text":"motion choreography"},{"_key":"9751532a29ec","_type":"span","marks":[],"text":" (the way UI elements appear on screen, for instance), "},{"_key":"35ed53685e58","_type":"span","marks":["bf0e38dbbb67"],"text":"elevation"},{"_key":"94d41e1000db","_type":"span","marks":[],"text":" adjustments (like raising the level of items in a carousel), and "},{"_key":"d715ea94f24f","_type":"span","marks":["c44ba9b34b7b"],"text":"state changes"},{"_key":"2455e9f6e577","_type":"span","marks":[],"text":". All this leads to phenomenal UX. Further, the use of customized components, typography, shape, and elevation ensure that the product is recognizable, usable, and an all-around joy."}],"markDefs":[{"_key":"425f714f84db","_type":"link","href":"https://material.io/design/motion/choreography.html"},{"_key":"bf0e38dbbb67","_type":"link","href":"https://material.io/design/environment/elevation.html#elevation-in-material-design"},{"_key":"c44ba9b34b7b","_type":"link","href":"https://material.io/design/interaction/states.html"}],"style":"normal"},{"_key":"24e9a03570e2","_type":"block","children":[{"_key":"abb02c0776130","_type":"span","marks":["strong"],"text":"Easy Diet Diary("},{"_key":"abb02c0776131","_type":"span","marks":[],"text":"the most popular Australian-made calorie counter and diet tracker) is another app that was built the native way but started using Flutter along the way. The original iOS app had about 75,000 lines of code. After implementing it with Flutter, the code was reduced to half. The app has about 20K daily active users. According to "},{"_key":"abb02c0776132","_type":"span","marks":["974a7ce2b72c"],"text":"Gary Hunter"},{"_key":"abb02c0776133","_type":"span","marks":[],"text":", its lead mobile app developer, says —"}],"markDefs":[{"_key":"974a7ce2b72c","_type":"link","href":"https://medium.com/flutter-community/finished-porting-a-75-000-line-native-ios-app-to-flutter-b5c0bff93715"}],"style":"normal"},{"_key":"404c3a880a58","_type":"customBlockQuote","customblockArray":[{"_key":"7da1f109a383","_type":"block","children":[{"_key":"f086ed29b3c5","_type":"span","marks":[],"text":"“For a long time the small company I work for has had an Android version near the top of its To Do list but we didn’t do it because:\n\nsupporting two code bases was too expensive and difficult to manage.\n\nthe main cross-platform development options, Xamarin and React Native, had deal breaking drawbacks (that’s another story).\n\nEnter Flutter!\n\nIt’s fast and holds out the promise of a UI experience that for all intents and purposes is indistinguishable from a native app”."}],"markDefs":[],"style":"normal"}]},{"_key":"c53d73f35bf8","_type":"block","children":[{"_key":"389e744f8608","_type":"span","marks":[],"text":"Best practices for Cross Platform Design"}],"markDefs":[],"style":"h3"},{"_key":"20d8c8bb1e7e","_type":"block","children":[{"_key":"074a1fe61e050","_type":"span","marks":[],"text":"The biggest risk that accompanies cross platform design is the one associated with users. You don’t want to risk alienating one group so that it feels like a second-class citizen."}],"markDefs":[],"style":"normal"},{"_key":"ec7ef42cbfb6","_type":"block","children":[{"_key":"677ef76903280","_type":"span","marks":[],"text":"Understand your users thoroughly. There are some basic native interfaces that "},{"_key":"677ef76903281","_type":"span","marks":["em"],"text":"must"},{"_key":"677ef76903282","_type":"span","marks":[],"text":" be followed. Others are more flexible. When applications are available on multiple platforms, individual users often won’t use the app on multiple platforms. (It is unlikely that a user carries both iPhone and Android phones?) So they will expect the native behavior of the platform."}],"markDefs":[]},{"_key":"0e6709603a44","_type":"block","children":[{"_key":"8100c85946300","_type":"span","marks":[],"text":"Design with accessibility in mind. Also, adhere to cohesion and coherence. For instance, if you’re using the app in a phone (forget about iOS/Android) and need to change to desktop, you would expect the platform to have a coherence in UI and flows. A sudden change in this kind of coherence can mar the experience."}],"markDefs":[]},{"_key":"8c30e9ad71dc","_type":"block","children":[{"_key":"b58adddfea7d0","_type":"span","marks":[],"text":"Ending"}],"markDefs":[],"style":"h4"},{"_key":"72adbb73bf38","_type":"block","children":[{"_key":"158865384d270","_type":"span","marks":[],"text":"Have you used Flutter along with Material Design? What has been your experience when it comes to designing for adaptability? Comment below."}],"markDefs":[],"style":"normal"}],"_rawFaq":null,"publishedAt":"2021-02-09T12:30:00.000Z","_updatedAt":"2021-04-08T09:24:53Z","readingTime":"11 min read","altTagMainImage":"Flutter UI/UX","titleMetaData":"Flutter UI/UX: Building Better, Consistent UI/UX for Android, iOS","shortanchorlinkh2":[{"h2link":"Platform Aware Widgets","h2shorttext":"Platform Aware Widgets"},{"h2link":"What is Adaptive UI/UX?","h2shorttext":"What is Adaptive UI/UX?"},{"h2link":"How do you design these adaptive experiences?","h2shorttext":"How do you design these adaptive experiences?"},{"h2link":"Are Adaptive Layouts same as Responsive?","h2shorttext":"Adaptive VS Responsive Layouts"}],"categories":[{"id":"61b2fbb3-23c5-54d6-aac3-bf8ba2dcecc3","title":"Blog"}],"mainImage":{"asset":{"id":"image-b4c15741d341d241dce5e03c3c7f8679658ae2ca-6720x3780-png","url":"https://cdn.sanity.io/images/ay6gmb6r/production/b4c15741d341d241dce5e03c3c7f8679658ae2ca-6720x3780.png","fluid":{"sizes":"(max-width: 800px) 100vw, 800px","src":"https://cdn.sanity.io/images/ay6gmb6r/production/b4c15741d341d241dce5e03c3c7f8679658ae2ca-6720x3780.png?w=800&h=450&fit=crop","srcSet":"https://cdn.sanity.io/images/ay6gmb6r/production/b4c15741d341d241dce5e03c3c7f8679658ae2ca-6720x3780.png?w=200&h=113&fit=crop 200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/b4c15741d341d241dce5e03c3c7f8679658ae2ca-6720x3780.png?w=400&h=225&fit=crop 400w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/b4c15741d341d241dce5e03c3c7f8679658ae2ca-6720x3780.png?w=800&h=450&fit=crop 800w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/b4c15741d341d241dce5e03c3c7f8679658ae2ca-6720x3780.png?w=1200&h=675&fit=crop 1200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/b4c15741d341d241dce5e03c3c7f8679658ae2ca-6720x3780.png?w=1600&h=900&fit=crop 1600w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/b4c15741d341d241dce5e03c3c7f8679658ae2ca-6720x3780.png?w=2400&h=1350&fit=crop 2400w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/b4c15741d341d241dce5e03c3c7f8679658ae2ca-6720x3780.png 6720w"}}},"author":{"id":"ec0d6881-3dab-51b7-8b5e-a4249032af52","name":"Karan Shah","myColor":{"hex":"#1641ff"},"image":{"asset":{"_id":"image-0ab949a78dc6fd21a4e22be386c4b6f1e7bd4f14-288x288-png","assetId":"0ab949a78dc6fd21a4e22be386c4b6f1e7bd4f14","_type":"sanity.imageAsset","id":"image-0ab949a78dc6fd21a4e22be386c4b6f1e7bd4f14-288x288-png"},"_type":"image","_key":null},"slug":{"current":"karan-shah"}},"slug":{"current":"flutter-lets-you-build-cross-platform-apps"},"tags":[{"id":"759ffff6-24cd-5a36-a895-100080b7136d","slug":{"current":"flutter"},"title":"Flutter"},{"id":"c35b3444-ecd0-549a-9fb5-bfc9e61cc993","slug":{"current":"app-development"},"title":"App Development"}],"referenceBlogPost":[{"mainImage":{"asset":{"id":"image-81449993f307fe7cc553c3ac8e63e737e2c6a845-2240x1260-jpg","fluid":{"src":"https://cdn.sanity.io/images/ay6gmb6r/production/81449993f307fe7cc553c3ac8e63e737e2c6a845-2240x1260.jpg?w=800&h=450&fit=crop","srcSet":"https://cdn.sanity.io/images/ay6gmb6r/production/81449993f307fe7cc553c3ac8e63e737e2c6a845-2240x1260.jpg?w=200&h=113&fit=crop 200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/81449993f307fe7cc553c3ac8e63e737e2c6a845-2240x1260.jpg?w=400&h=225&fit=crop 400w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/81449993f307fe7cc553c3ac8e63e737e2c6a845-2240x1260.jpg?w=800&h=450&fit=crop 800w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/81449993f307fe7cc553c3ac8e63e737e2c6a845-2240x1260.jpg?w=1200&h=675&fit=crop 1200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/81449993f307fe7cc553c3ac8e63e737e2c6a845-2240x1260.jpg?w=1600&h=900&fit=crop 1600w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/81449993f307fe7cc553c3ac8e63e737e2c6a845-2240x1260.jpg 2240w","sizes":"(max-width: 800px) 100vw, 800px"}}},"publishedAt":"2020-10-09T14:30:00.000Z","readingTime":"3 Min Read","author":{"name":"Milind Mevada"},"slug":{"current":"top-10-flutter-repositories-on-github"},"title":"Top 10 Flutter Repositories on GitHub"},{"mainImage":{"asset":{"id":"image-c184f98b0b009becaf11c15c2272e16d53539d9e-2240x1260-png","fluid":{"src":"https://cdn.sanity.io/images/ay6gmb6r/production/c184f98b0b009becaf11c15c2272e16d53539d9e-2240x1260.png?w=800&h=450&fit=crop","srcSet":"https://cdn.sanity.io/images/ay6gmb6r/production/c184f98b0b009becaf11c15c2272e16d53539d9e-2240x1260.png?w=200&h=113&fit=crop 200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/c184f98b0b009becaf11c15c2272e16d53539d9e-2240x1260.png?w=400&h=225&fit=crop 400w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/c184f98b0b009becaf11c15c2272e16d53539d9e-2240x1260.png?w=800&h=450&fit=crop 800w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/c184f98b0b009becaf11c15c2272e16d53539d9e-2240x1260.png?w=1200&h=675&fit=crop 1200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/c184f98b0b009becaf11c15c2272e16d53539d9e-2240x1260.png?w=1600&h=900&fit=crop 1600w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/c184f98b0b009becaf11c15c2272e16d53539d9e-2240x1260.png 2240w","sizes":"(max-width: 800px) 100vw, 800px"}}},"publishedAt":"2019-11-22T12:00:00.000Z","readingTime":"17 min read","author":{"name":"Karan Shah"},"slug":{"current":"flutter-tutorial-for-beginners-step-by-step-guide"},"title":"Flutter Tutorial for Beginners: Step by Step Guide to Build Apps"}]},"readNextBlog":[{"mainImage":{"asset":{"id":"image-81449993f307fe7cc553c3ac8e63e737e2c6a845-2240x1260-jpg","fluid":{"src":"https://cdn.sanity.io/images/ay6gmb6r/production/81449993f307fe7cc553c3ac8e63e737e2c6a845-2240x1260.jpg?w=800&h=450&fit=crop","srcSet":"https://cdn.sanity.io/images/ay6gmb6r/production/81449993f307fe7cc553c3ac8e63e737e2c6a845-2240x1260.jpg?w=200&h=113&fit=crop 200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/81449993f307fe7cc553c3ac8e63e737e2c6a845-2240x1260.jpg?w=400&h=225&fit=crop 400w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/81449993f307fe7cc553c3ac8e63e737e2c6a845-2240x1260.jpg?w=800&h=450&fit=crop 800w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/81449993f307fe7cc553c3ac8e63e737e2c6a845-2240x1260.jpg?w=1200&h=675&fit=crop 1200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/81449993f307fe7cc553c3ac8e63e737e2c6a845-2240x1260.jpg?w=1600&h=900&fit=crop 1600w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/81449993f307fe7cc553c3ac8e63e737e2c6a845-2240x1260.jpg 2240w","sizes":"(max-width: 800px) 100vw, 800px"}}},"publishedAt":"2020-10-09T14:30:00.000Z","readingTime":"3 Min Read","author":{"name":"Milind Mevada"},"slug":{"current":"top-10-flutter-repositories-on-github"},"title":"Top 10 Flutter Repositories on GitHub"},{"mainImage":{"asset":{"id":"image-c184f98b0b009becaf11c15c2272e16d53539d9e-2240x1260-png","fluid":{"src":"https://cdn.sanity.io/images/ay6gmb6r/production/c184f98b0b009becaf11c15c2272e16d53539d9e-2240x1260.png?w=800&h=450&fit=crop","srcSet":"https://cdn.sanity.io/images/ay6gmb6r/production/c184f98b0b009becaf11c15c2272e16d53539d9e-2240x1260.png?w=200&h=113&fit=crop 200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/c184f98b0b009becaf11c15c2272e16d53539d9e-2240x1260.png?w=400&h=225&fit=crop 400w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/c184f98b0b009becaf11c15c2272e16d53539d9e-2240x1260.png?w=800&h=450&fit=crop 800w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/c184f98b0b009becaf11c15c2272e16d53539d9e-2240x1260.png?w=1200&h=675&fit=crop 1200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/c184f98b0b009becaf11c15c2272e16d53539d9e-2240x1260.png?w=1600&h=900&fit=crop 1600w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/c184f98b0b009becaf11c15c2272e16d53539d9e-2240x1260.png 2240w","sizes":"(max-width: 800px) 100vw, 800px"}}},"publishedAt":"2019-11-22T12:00:00.000Z","readingTime":"17 min read","author":{"name":"Karan Shah"},"slug":{"current":"flutter-tutorial-for-beginners-step-by-step-guide"},"title":"Flutter Tutorial for Beginners: Step by Step Guide to Build Apps"}],"blogSLug":"flutter-lets-you-build-cross-platform-apps"}},"staticQueryHashes":["1951403926","2015784780","2763451262","3649515864","3810076356","4118766420"]}