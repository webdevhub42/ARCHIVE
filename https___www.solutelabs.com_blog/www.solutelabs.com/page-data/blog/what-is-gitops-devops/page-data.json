{"componentChunkName":"component---src-components-blogs-blog-detail-js","path":"/blog/what-is-gitops-devops","result":{"pageContext":{"post":{"id":"39ac81e5-003f-5aef-b17a-f08046a90b78","title":" A look into GitOps : Future of DevOps?","excerpt":"What is GitOps and how does it benefit your deployment cycle?","_rawBody":[{"_key":"04ec1a9c89d3","_type":"block","children":[{"_key":"42402aa3efb20","_type":"span","marks":[],"text":"GitOps is a new approach for continuous deployment of your workload on Kubernetes. Extension of the DevOps workflow pattern, it uses any source code/version control repository as the single source of truth for all the infrastructure to be deployed on Kubernetes."}],"markDefs":[],"style":"normal"},{"_key":"6fba5239d57c","_type":"customImage","alt":"GitOps operator for deploying changes","asset":{"_ref":"image-1e690f4c2a404d5541bf7fdf768dc17ac4891e78-357x266-png","_type":"reference"}},{"_key":"d1b06b68ecce","_type":"block","children":[{"_key":"6fe1aa807baf0","_type":"span","marks":[],"text":"GitOps works on the principle of a single source of truth and the complete state of an application is assumed to be present on a git repository. It brings the power to the developers to maintain their own infrastructure and code base in a single repository which is then reproduced on a cloud infrastructure such as Kubernetes."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"a9945ff00eeb","_type":"block","children":[{"_key":"d9b0bfb3c9e7","_type":"span","marks":[],"text":"In practice the two elements i.e., "},{"_key":"33457451bb6b","_type":"span","marks":["strong"],"text":"IAC"},{"_key":"dc1989f48988","_type":"span","marks":[],"text":"(Infrastructure as a Code) YAML files and "},{"_key":"3a8c4eed6245","_type":"span","marks":["strong"],"text":"source code"},{"_key":"d18bebd5b451","_type":"span","marks":[],"text":" are maintained in a version control(Git repository), which is monitored by another entity i.e., "},{"_key":"5eb22c6a1944","_type":"span","marks":["strong"],"text":"GitOps operator"},{"_key":"97d3abb3e976","_type":"span","marks":[],"text":" running on a cloud infra(Kubernetes) which generates a pull request to the repository whenever it observes a change in running application’s version."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"4f7001311c1b","_type":"block","children":[{"_key":"26a867e913650","_type":"span","marks":[],"text":"In simple aspects of CI/CD, continuous integration is merging of the developed code into master branch and continuous deployment is releasing the latest version of code from master branch to a runtime. This is exactly what GitOps does it automates your infra updates, where you as a developer don’t have to bother about any CI/CD files and other setups, and can solely focus on your code with a one time configuration for YAML files in your repository."}],"markDefs":[],"style":"normal"},{"_key":"37fb71333fd8","_type":"block","children":[{"_key":"6a6a45153d660","_type":"span","marks":[],"text":"DevOps CI/CD vs. GitOps"}],"markDefs":[],"style":"h2"},{"_key":"f1b607de699f","_type":"block","children":[{"_key":"1459e1aa92c5","_type":"span","marks":[],"text":"DevOps CI/CD"}],"markDefs":[],"style":"h3"},{"_key":"9e46ddc2c2ce","_type":"block","children":[{"_key":"94ece1ade227","_type":"span","marks":[],"text":"A traditional deployment pipeline involves two paradigms, one being "},{"_key":"ecbb86bf9c70","_type":"span","marks":["strong"],"text":"continuous integration"},{"_key":"f3103ae657d3","_type":"span","marks":[],"text":" meaning the source code changes extracted from multiple contributors is integrated into one git repository and is passed through build/test stages, and "},{"_key":"59dc4bc20829","_type":"span","marks":["strong"],"text":"continuous deployment"},{"_key":"d3a1e4d30906","_type":"span","marks":[],"text":" which is taking the integrated code and reflecting the change on a running software."}],"markDefs":[],"style":"normal"},{"_key":"c629ffd738a3","_type":"customImage","alt":"Push based Deployments","asset":{"_ref":"image-a6cc2020b63a063a05215135b239ad2ac6a231e9-761x261-png","_type":"reference"}},{"_key":"27eb3e88fc65","_type":"block","children":[{"_key":"04a53f39eb45","_type":"span","marks":[],"text":"This kind of approach of deployment of code is known as "},{"_key":"d3336de02f89","_type":"span","marks":["strong"],"text":"push based deployments"},{"_key":"365b8c155054","_type":"span","marks":[],"text":" wherein whenever a new piece of code is pushed to a repository a new build cycle is triggered which creates a docker image pushes it to a repository and the YAML files residing in the the code repository is applied to deploy the change."}],"markDefs":[],"style":"normal"},{"_key":"95822eb7fad2","_type":"block","children":[{"_key":"4f2c87db39b50","_type":"span","marks":[],"text":"This approach completely resides on push based changes and hence needs a monitoring tool in place for the pushes that take place, it cannot version control the changes that take place in code repository on it’s own and maintain the state on the running environment."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"a4815b05aeea","_type":"block","children":[{"_key":"c77b6538d4550","_type":"span","marks":[],"text":"This approach is not designed keeping security as a priority and hence the CI/CD tool required read access for the source repository and also needs complete read write access of the infrastructure in order deploy the changes, which makes the infra vulnerable since changes can be made from outside the cluster."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"0a5f1f86a508","_type":"block","children":[{"_key":"6dff61689d8f","_type":"span","marks":[],"text":"GitOps for deployment"}],"markDefs":[],"style":"h3"},{"_key":"0c326d37cc86","_type":"block","children":[{"_key":"21929da3cf99","_type":"span","marks":[],"text":"GitOps uses a more modern approach bringing pull based deployments into picture. In this scenario no external monitoring is required, instead a tool, "},{"_key":"f70a8cc24b40","_type":"span","marks":["strong"],"text":"operator"},{"_key":"568c7d0e2334","_type":"span","marks":[],"text":" comes into play which directly compares the states of deployed infrastructure with that of code residing in the repository and basis this manages the state of the infrastructure. Not only code based changes can be reflected to infra, in fact operator can compare the changes in image registry as well to keep the infra up to date with latest image changes."}],"markDefs":[],"style":"normal"},{"_key":"bf2917134b22","_type":"customImage","alt":"CI/CD with GitOps","asset":{"_ref":"image-a6cc2020b63a063a05215135b239ad2ac6a231e9-761x261-png","_type":"reference"}},{"_key":"d1749fb7d67b","_type":"block","children":[{"_key":"ed3c6639d5a5","_type":"span","marks":[],"text":"GitOps advantages"}],"markDefs":[],"style":"h2"},{"_key":"8321be260f42","_type":"block","children":[{"_key":"cbe32db7306b","_type":"span","marks":[],"text":"With GitOps you can deploy changes faster as compared to any traditional CI/CD tools since only single source of truth exists, hence there is no need to manage and monitor other tools, a developer only needs to concern with the source code repository and it’s changes to deploy their code."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"a05ce399c3ce","_type":"block","children":[{"_key":"464b3b05022a0","_type":"span","marks":[],"text":"Fault tolerance is increased with GitOps since if the infra or code breaks with a new push, you are only one git revert away from undoing your changes and fixing your environment. The changes since are directly compared and reflected the management and recovery is improved substantially."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"dc7ab2b700d6","_type":"block","children":[{"_key":"66578c411c820","_type":"span","marks":[],"text":"Management remains with the operations team, since operator resides alongside infra you don’t need any access credentials to leave your infra, only access required is from operator to infra rest everything is managed within your environment and hence your developers need not require direct access to infra."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"bce867a28e27","_type":"block","children":[{"_key":"838439d26f3d0","_type":"span","marks":[],"text":"Every thing is tracked at a single location hence all the infra changes can be found in git logs and every change that is being pushed to infra can be seen in git commits, so you do not require third party tools to keep monitoring in check it is managed internally in git."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"ed85dbb8029d","_type":"block","children":[{"_key":"7ddc850ede260","_type":"span","marks":[],"text":"GitOps enables two way tracking of your environment, hence if there is any change in your infra or failures the state is compared with the repository and restored automatically, also since it compares your infra with source code directory there’s no way for direct infra changes and deployments which makes your infra completely isolated and secure."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"989715ab1e32","_type":"block","children":[{"_key":"a911fff5944a0","_type":"span","marks":[],"text":"GitOps operator enables monitoring for your infra as well and can send alerts in form of emails or slack notifications making your infra more robust."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"123db6c20cca","_type":"block","children":[{"_key":"5fab0bff9562","_type":"span","marks":[],"text":"GitOps disadvantages"}],"markDefs":[],"style":"h2"},{"_key":"5c6320073ab2","_type":"block","children":[{"_key":"78fe293d13910","_type":"span","marks":[],"text":"GitOps operator becomes a single point of failure for your infra since if the operator fails there’s no deployments possible hence a proper monitoring tools needs to be in place to keep a track of your operator being in running state."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"aadf791bb573","_type":"block","children":[{"_key":"2e0c002fd5770","_type":"span","marks":[],"text":"Since GitOps only offers continuous deployments, proper planning is required for integrating it with a continuous integration tool, which is commonly Gits own CI tool which is GitHub actions or GitLab CI/CD."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"7b6ce6bfb50e","_type":"block","children":[{"_key":"882fb42ee154","_type":"span","marks":[],"text":"Understanding GitOps with a test setup"}],"markDefs":[],"style":"h2"},{"_key":"0380224c2391","_type":"block","children":[{"_key":"eff63db8f752","_type":"span","marks":[],"text":"Now we take a look at how GitOps works in detail by taking a test repository into consideration."}],"markDefs":[],"style":"normal"},{"_key":"8497d772e10b","_type":"block","children":[{"_key":"631cf0a111fb","_type":"span","marks":["strong"],"text":"Pre-requisites"}],"markDefs":[],"style":"h3"},{"_key":"3faf3bd3dd8c","_type":"block","children":[{"_key":"bde8191cef810","_type":"span","marks":[],"text":"A GitHub account with git installed locally"}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"05084993dcf6","_type":"block","children":[{"_key":"e4473789ea940","_type":"span","marks":[],"text":"A container registry account with access to push/pull to a repository and Docker installed locally"}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"fbb340115e2c","_type":"block","children":[{"_key":"f73c6b7d22d20","_type":"span","marks":[],"text":"A running Kubernetes cluster with proper access from your local machine"}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"316e6547b869","_type":"block","children":[{"_key":"7878b24c4a180","_type":"span","marks":[],"text":"Ready your environment registry and CI pipeline"}],"markDefs":[],"style":"h3"},{"_key":"0f6451fe6214","_type":"block","children":[{"_key":"573c05852ea10","_type":"span","marks":[],"text":"We will host a sample application running a http server using NodeJS and create a container for the application using Dockerfile."}],"markDefs":[],"style":"normal"},{"_key":"d0fd86435be1","_type":"block","children":[{"_key":"7fa318f17c780","_type":"span","marks":[],"text":"Copy the following code as "},{"_key":"7fa318f17c781","_type":"span","marks":["em"],"text":"app.js"},{"_key":"7fa318f17c782","_type":"span","marks":[],"text":" file into your git repo. This is a simple code in node.js, creating a web server which prints Hello World on you we browser."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"658eb35a4c6d","_type":"code","code":"const http = require('http');\r\nconst hostname = '127.0.0.1';\r\nconst port = 3000;\r\nconst server = http.createServer((req, res) => {\r\n  res.statusCode = 200;\r\n  res.setHeader('Content-Type', 'text/plain');\r\n  res.end('Hello World');\r\n});\r\nserver.listen(port, hostname, () => {\r\n  console.log(`Server running at http://${hostname}:${port}/`);\r\n});"},{"_key":"b34adda50023","_type":"block","children":[{"_key":"a926bd011525","_type":"span","marks":[],"text":"Copy the following snippet as your "},{"_key":"8dddc5ef5d91","_type":"span","marks":["em"],"text":"Dockerfile"},{"_key":"895eee8493c4","_type":"span","marks":[],"text":" into your git repo. This Dockerfile containerizes your code so you don’t have a need to have nodejs installed locally."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"a14dfb62d81c","_type":"code","code":"FROM node:11-alpine\r\nCOPY . .\r\nCMD [\"node\",\"node.js\"]"},{"_key":"92e7d54e04fb","_type":"block","children":[{"_key":"f3eb6f65b1b0","_type":"span","marks":[],"text":"Now, since we have our code and dockerfile ready we need to create a docker image and push it to a registry. For this example we consider you have an account on "},{"_key":"c415bbc370ff","_type":"span","marks":["40d85fad3fc5"],"text":"https://hub.docker.com/"},{"_key":"bad7bb80fae1","_type":"span","marks":[],"text":" with proper read/write access in place. You can manually build an image and push it to registry but since we are following GitOps practice we will automate our build using GitHub actions."}],"markDefs":[{"_key":"40d85fad3fc5","_type":"link","href":"https://hub.docker.com/"}],"style":"normal"},{"_key":"058ca25b5e6e","_type":"block","children":[{"_key":"6215595cfce9","_type":"span","marks":[],"text":"In you GitHub account go into Actions, click on "},{"_key":"b9fd4c0e083f","_type":"span","marks":["8bff45831494","em"],"text":"set up a workflow yourself"},{"_key":"c957cfc58b47","_type":"span","marks":[],"text":" and copy the following workflow file,"}],"level":1,"listItem":"bullet","markDefs":[{"_key":"8bff45831494","_type":"link","href":"https://github.com/jay-solutelabs/Hello_World_NodeJS/new/main?filename=.github%2Fworkflows%2Fmain.yml&workflow_template=blank"}],"style":"normal"},{"_key":"6daa42fc0774","_type":"code","code":"name: CI\r\n\r\non:\r\n  push:\r\n    branches: [ main ]\r\n\r\njobs:\r\n  build:\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      - uses: actions/checkout@v2\r\n      -\r\n        name: Set up QEMU\r\n        uses: docker/setup-qemu-action@v1\r\n      -\r\n        name: Set up Docker Buildx\r\n        uses: docker/setup-buildx-action@v1\r\n      -\r\n        name: Login to DockerHub\r\n        uses: docker/login-action@v1\r\n        with:\r\n          username: ${{ secrets.DOCKERHUB_USERNAME }}\r\n          password: ${{ secrets.DOCKERHUB_TOKEN }}\r\n      - \r\n        name: Generate build number\r\n        id: buildnumber\r\n        uses: einaregilsson/build-number@v3 \r\n        with:\r\n          token: ${{secrets.github_token}}\r\n-\r\n        name: Build and push\r\n        uses: docker/build-push-action@v2\r\n        with:\r\n          context: .\r\n          push: true\r\n          tags: <Your_username>/helloworld:${{ steps.buildnumber.outputs.build_number }}"},{"_key":"a92ccc62f4bd","_type":"block","children":[{"_key":"e04d35b43276","_type":"span","marks":[],"text":"After commit you should see .github/workflows/main.yml present in your code repo. It’ll trigger a new pipeline everytime a commit is observed in master branch, but since we haven’t configured DockerHub credentials as of yet your push will fail.\nSo to configure secrets, go to settings -> secrets and add these two secrets,"}],"markDefs":[],"style":"normal"},{"_key":"7ff04d79082c","_type":"code","code":"DOCKERHUB_USERNAME\r\nvalue : <Your Username>\r\nDOCKERHUB_TOKEN\r\nvalue: <Your Password>"},{"_key":"82768f93245d","_type":"block","children":[{"_key":"15565c26b22d","_type":"span","marks":[],"text":"Now next time the pipeline runs you’ll see a successful CI build."}],"markDefs":[],"style":"normal"},{"_key":"45c2c0fd3157","_type":"block","children":[{"_key":"6f673a14e4b8","_type":"span","marks":[],"text":"In order to deploy on Kubernetes create a folder k8s in your git repo and below file as deployment_svc.yml,"}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"2c1261df667d","_type":"code","code":"apiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  name: nodejs-helloworld\r\n  annotations:\r\n    flux.weave.works/automated: \"true\"\r\n  labels:\r\n    app: helloworld\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      app: helloworld\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: helloworld\r\n    spec:\r\n      containers:\r\n      - name: helloworld\r\n        image: <your user name>/helloworld:latest\r\n        ports:\r\n        - containerPort: 3000\r\n---\r\napiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  name: helloworld-svc\r\nspec:\r\n  selector:\r\n    app: helloworld\r\n  ports:\r\n    - protocol: TCP\r\n      port: 3000\r\n      targetPort: 3000\r\n      nodePort: 30001\r\n  type: NodePort"},{"_key":"9c0d7b15c014","_type":"block","children":[{"_key":"87cee9c50d97","_type":"span","marks":[],"text":"You can apply the following file and check on your browser hitting, http://<node ip>:30001/"}],"markDefs":[],"style":"normal"},{"_key":"260b22f99c77","_type":"block","children":[{"_key":"85b4c4dbf815","_type":"span","marks":[],"text":"The next step is setting GitOps operator in your infra"}],"markDefs":[],"style":"h2"},{"_key":"88fac7688ec4","_type":"block","children":[{"_key":"356637e13900","_type":"span","marks":[],"text":"Make sure you have a Kubernetes cluster deployed with Kubectl configured from your local machine. The GitOps operator we will be installing is Flux. Follow the steps to install the same using helm,"}],"markDefs":[],"style":"normal"},{"_key":"5279ffd7fd0d","_type":"block","children":[{"_key":"5bfeaa90f5e1","_type":"span","marks":[],"text":"Clone the flux repository:"}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"d3b76d871028","_type":"code","code":"git clone https://github.com/fluxcd/flux && cd flux"},{"_key":"9d4aa3300b5b","_type":"block","children":[{"_key":"d2fc8111967d","_type":"span","marks":[],"text":"In order for flux to run you need to edit git-url with your git ssh url for cloning, git-path with the path for Kubernetes files which is k8s in our case. After making the given changes we can install flux to your cluster,"}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"24a6141ef48e","_type":"code","code":"kubectl apply -f deploy.yml"},{"_key":"7d09de3a2e32","_type":"block","children":[{"_key":"f25629b90fc5","_type":"span","marks":[],"text":"Now, after all pods spin up and come to running state, check for logs of pod named flux, it will print ssh key which needs to be added in your repository under settings -> deploy keys -> add depoy key, and give it read write access. This will configure your flux deployment to monitor your git repository and check for changes in your yaml files."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"6b6de78839f2","_type":"block","children":[{"_key":"4cfe8def38f6","_type":"span","marks":[],"text":"Testing GitOps operator for CD"}],"markDefs":[],"style":"h2"},{"_key":"ac21cbdbdcf7","_type":"block","children":[{"_key":"698b0f315392","_type":"span","marks":[],"text":"After setting up our repository and operator on Kubernetes, you can commit your new code and change your image tag in k8s/deployment_svc.yml and you should see a new build automatically triggered through GitHub actions which is basically you CI, and a deployment created in Kubernetes by flux comparing k8s/deployment_svc.yml with the infra.\nThis way we have achieved a complete CI/CD pipeline configuration using GitHub actions and GitOps."}],"markDefs":[],"style":"normal"},{"_key":"34a80487b2a1","_type":"block","children":[{"_key":"e3032aadb3b8","_type":"span","marks":[],"text":"Summary"}],"markDefs":[],"style":"h4"},{"_key":"cbfd1e385585","_type":"block","children":[{"_key":"6a376d86d36e0","_type":"span","marks":[],"text":"After understanding differences between traditional CI/CD vs. GitOps CD and configuring a test CI/CD using GitOps operator we can conclude that GitOps is a modern DevOps paradigm which is meant to ease your deployments with providing utmost security, with better management of code and infra since there exists only a single source of truth for syncing and operability."}],"markDefs":[],"style":"normal"}],"_rawFaq":null,"publishedAt":"2021-06-18T12:00:38.760Z","_updatedAt":"2021-07-20T08:25:31Z","readingTime":"8 Min read","altTagMainImage":null,"titleMetaData":" A look into GitOps : Future of DevOps?","shortanchorlinkh2":[{"h2link":"DevOps CI/CD vs. GitOps","h2shorttext":"DevOps vs. GitOps"},{"h2link":"GitOps advantages","h2shorttext":"GitOps Advantages"},{"h2link":"GitOps disadvantages","h2shorttext":"GitOps Disadvantages"},{"h2link":"Understanding GitOps with a test setup","h2shorttext":"Understanding GitOps with a Test Setup"},{"h2link":"The next step is setting GitOps operator in your infra","h2shorttext":"Setting GitOps Operator"},{"h2link":"Testing GitOps operator for CD","h2shorttext":"Testing GitOps Operator"}],"categories":[{"id":"61b2fbb3-23c5-54d6-aac3-bf8ba2dcecc3","title":"Blog"}],"mainImage":{"asset":{"id":"image-2127f60fcde1782a481427631473ff84ea0ffcd0-4480x2520-png","url":"https://cdn.sanity.io/images/ay6gmb6r/production/2127f60fcde1782a481427631473ff84ea0ffcd0-4480x2520.png","fluid":{"sizes":"(max-width: 800px) 100vw, 800px","src":"https://cdn.sanity.io/images/ay6gmb6r/production/2127f60fcde1782a481427631473ff84ea0ffcd0-4480x2520.png?w=800&h=450&fit=crop","srcSet":"https://cdn.sanity.io/images/ay6gmb6r/production/2127f60fcde1782a481427631473ff84ea0ffcd0-4480x2520.png?w=200&h=113&fit=crop 200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/2127f60fcde1782a481427631473ff84ea0ffcd0-4480x2520.png?w=400&h=225&fit=crop 400w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/2127f60fcde1782a481427631473ff84ea0ffcd0-4480x2520.png?w=800&h=450&fit=crop 800w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/2127f60fcde1782a481427631473ff84ea0ffcd0-4480x2520.png?w=1200&h=675&fit=crop 1200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/2127f60fcde1782a481427631473ff84ea0ffcd0-4480x2520.png?w=1600&h=900&fit=crop 1600w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/2127f60fcde1782a481427631473ff84ea0ffcd0-4480x2520.png?w=2400&h=1350&fit=crop 2400w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/2127f60fcde1782a481427631473ff84ea0ffcd0-4480x2520.png 4480w"}}},"author":{"id":"41839b4c-7970-59fe-ab1b-78a8fbe1e9d8","name":"Kintul Upadhyay","myColor":{"hex":"#2454e3"},"image":{"asset":{"_id":"image-e7e31759e107dcd9f9d409f876d67bd0d4116d79-4762x6735-png","assetId":"e7e31759e107dcd9f9d409f876d67bd0d4116d79","_type":"sanity.imageAsset","id":"image-e7e31759e107dcd9f9d409f876d67bd0d4116d79-4762x6735-png"},"_type":"image","_key":null},"slug":{"current":"kintul-upadhyay"}},"slug":{"current":"what-is-gitops-devops"},"tags":[{"id":"88622e34-fe67-5f26-83fb-69aa4862c663","slug":{"current":"devops"},"title":"DevOps"},{"id":"2c482d5a-ab27-5361-a1e7-f142701ad92b","slug":{"current":"gitops"},"title":"GitOps"}],"referenceBlogPost":[{"mainImage":{"asset":{"id":"image-a6805562c34f16e8c4251b56109a28f9361c71e6-2240x1260-png","fluid":{"src":"https://cdn.sanity.io/images/ay6gmb6r/production/a6805562c34f16e8c4251b56109a28f9361c71e6-2240x1260.png?w=800&h=450&fit=crop","srcSet":"https://cdn.sanity.io/images/ay6gmb6r/production/a6805562c34f16e8c4251b56109a28f9361c71e6-2240x1260.png?w=200&h=113&fit=crop 200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/a6805562c34f16e8c4251b56109a28f9361c71e6-2240x1260.png?w=400&h=225&fit=crop 400w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/a6805562c34f16e8c4251b56109a28f9361c71e6-2240x1260.png?w=800&h=450&fit=crop 800w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/a6805562c34f16e8c4251b56109a28f9361c71e6-2240x1260.png?w=1200&h=675&fit=crop 1200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/a6805562c34f16e8c4251b56109a28f9361c71e6-2240x1260.png?w=1600&h=900&fit=crop 1600w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/a6805562c34f16e8c4251b56109a28f9361c71e6-2240x1260.png 2240w","sizes":"(max-width: 800px) 100vw, 800px"}}},"publishedAt":"2020-12-08T12:00:56.066Z","readingTime":"8 Min read","author":{"name":"Karan Shah"},"slug":{"current":"hasura-api-development"},"title":"Hasura: Create APIs with Hasura to save 30%+ app dev costs"},{"mainImage":{"asset":{"id":"image-ff3dcdfaed52f229c5055610755ae3b5dbd3f002-2240x1260-png","fluid":{"src":"https://cdn.sanity.io/images/ay6gmb6r/production/ff3dcdfaed52f229c5055610755ae3b5dbd3f002-2240x1260.png?w=800&h=450&fit=crop","srcSet":"https://cdn.sanity.io/images/ay6gmb6r/production/ff3dcdfaed52f229c5055610755ae3b5dbd3f002-2240x1260.png?w=200&h=113&fit=crop 200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/ff3dcdfaed52f229c5055610755ae3b5dbd3f002-2240x1260.png?w=400&h=225&fit=crop 400w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/ff3dcdfaed52f229c5055610755ae3b5dbd3f002-2240x1260.png?w=800&h=450&fit=crop 800w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/ff3dcdfaed52f229c5055610755ae3b5dbd3f002-2240x1260.png?w=1200&h=675&fit=crop 1200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/ff3dcdfaed52f229c5055610755ae3b5dbd3f002-2240x1260.png?w=1600&h=900&fit=crop 1600w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/ff3dcdfaed52f229c5055610755ae3b5dbd3f002-2240x1260.png 2240w","sizes":"(max-width: 800px) 100vw, 800px"}}},"publishedAt":"2019-05-08T12:00:00.000Z","readingTime":"3 min read","author":{"name":"Nishan Bende"},"slug":{"current":"configuring-thunk-action-creators-and-redux-dev-tools-with-reacts-use-reducer-hook"},"title":"Configuring thunk action creators and redux dev-tools with React’s use Reducer hook."}]},"readNextBlog":[{"mainImage":{"asset":{"id":"image-a6805562c34f16e8c4251b56109a28f9361c71e6-2240x1260-png","fluid":{"src":"https://cdn.sanity.io/images/ay6gmb6r/production/a6805562c34f16e8c4251b56109a28f9361c71e6-2240x1260.png?w=800&h=450&fit=crop","srcSet":"https://cdn.sanity.io/images/ay6gmb6r/production/a6805562c34f16e8c4251b56109a28f9361c71e6-2240x1260.png?w=200&h=113&fit=crop 200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/a6805562c34f16e8c4251b56109a28f9361c71e6-2240x1260.png?w=400&h=225&fit=crop 400w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/a6805562c34f16e8c4251b56109a28f9361c71e6-2240x1260.png?w=800&h=450&fit=crop 800w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/a6805562c34f16e8c4251b56109a28f9361c71e6-2240x1260.png?w=1200&h=675&fit=crop 1200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/a6805562c34f16e8c4251b56109a28f9361c71e6-2240x1260.png?w=1600&h=900&fit=crop 1600w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/a6805562c34f16e8c4251b56109a28f9361c71e6-2240x1260.png 2240w","sizes":"(max-width: 800px) 100vw, 800px"}}},"publishedAt":"2020-12-08T12:00:56.066Z","readingTime":"8 Min read","author":{"name":"Karan Shah"},"slug":{"current":"hasura-api-development"},"title":"Hasura: Create APIs with Hasura to save 30%+ app dev costs"},{"mainImage":{"asset":{"id":"image-ff3dcdfaed52f229c5055610755ae3b5dbd3f002-2240x1260-png","fluid":{"src":"https://cdn.sanity.io/images/ay6gmb6r/production/ff3dcdfaed52f229c5055610755ae3b5dbd3f002-2240x1260.png?w=800&h=450&fit=crop","srcSet":"https://cdn.sanity.io/images/ay6gmb6r/production/ff3dcdfaed52f229c5055610755ae3b5dbd3f002-2240x1260.png?w=200&h=113&fit=crop 200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/ff3dcdfaed52f229c5055610755ae3b5dbd3f002-2240x1260.png?w=400&h=225&fit=crop 400w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/ff3dcdfaed52f229c5055610755ae3b5dbd3f002-2240x1260.png?w=800&h=450&fit=crop 800w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/ff3dcdfaed52f229c5055610755ae3b5dbd3f002-2240x1260.png?w=1200&h=675&fit=crop 1200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/ff3dcdfaed52f229c5055610755ae3b5dbd3f002-2240x1260.png?w=1600&h=900&fit=crop 1600w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/ff3dcdfaed52f229c5055610755ae3b5dbd3f002-2240x1260.png 2240w","sizes":"(max-width: 800px) 100vw, 800px"}}},"publishedAt":"2019-05-08T12:00:00.000Z","readingTime":"3 min read","author":{"name":"Nishan Bende"},"slug":{"current":"configuring-thunk-action-creators-and-redux-dev-tools-with-reacts-use-reducer-hook"},"title":"Configuring thunk action creators and redux dev-tools with React’s use Reducer hook."}],"blogSLug":"what-is-gitops-devops"}},"staticQueryHashes":["1951403926","2015784780","2763451262","3649515864","3810076356","4118766420"]}