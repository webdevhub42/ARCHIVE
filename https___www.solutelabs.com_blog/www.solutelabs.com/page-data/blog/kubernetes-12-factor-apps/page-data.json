{"componentChunkName":"component---src-components-blogs-blog-detail-js","path":"/blog/kubernetes-12-factor-apps","result":{"pageContext":{"post":{"id":"11853d6d-003e-541e-8f55-1ad6f3757bef","title":"Combining the power of 12 Factor App with Kubernetes to build next-generation SaaS products","excerpt":"Kubernetes & 12-Factor Apps: Learn the benefits of 12-factor apps, what are 12 factors, a 12-step process to build 12-factor apps using Kubernetes.","_rawBody":[{"_key":"ef800cf8132f","_type":"block","children":[{"_key":"2772ff89eac1","_type":"span","marks":["em"],"text":"This post focuses on one of the most popular methodologies, Twelve-Factor App, for building web apps/SaaS products alongside Kubernetes (the open-source container orchestration platform)."}],"markDefs":[],"style":"normal"},{"_key":"ef2c10adf5b7","_type":"block","children":[{"_key":"41e36ff38a73","_type":"span","marks":[],"text":"The Software-as-a-Service (SaaS) industry has seen unprecedented growth in recent times. It is expected to be valued at $"},{"_key":"1ffdf271389e","_type":"span","marks":["6c9090a3a709"],"text":"623 billion by 2023"},{"_key":"e8edf2f4015c","_type":"span","marks":[],"text":" at a compound annual growth rate of 18%. The need for increased agility and automation will drive the industry’s growth."}],"markDefs":[{"_key":"6c9090a3a709","_type":"link","href":"https://financesonline.com/saas-statistics/"}],"style":"normal"},{"_key":"6250e3c54769","_type":"customBlockQuote","customblockArray":[{"_key":"048a3cf33530","_type":"block","children":[{"_key":"9b59b79f6cdc","_type":"span","marks":[],"text":"86% of organizations said that they expected at least 80% of their software needs to be met by SaaS after 2022 (Via BlueTree AI)."}],"markDefs":[],"style":"normal"}]},{"_key":"b79852fdaf48","_type":"customImage","alt":"Public cloud application services/software as a service (SaaS) end-user spending worldwide from 2015 to 2022(in billion U.S. dollars)","asset":{"_ref":"image-5f59b5d0beb07d7b791e0350088500bd9afc1a88-823x576-png","_type":"reference"},"imageFigcaptionName":"Public cloud application services/software as a service (SaaS) end-user spending worldwide from 2015 to 2022(in billion U.S. dollars)"},{"_key":"e7177f5c5fa3","_type":"block","children":[{"_key":"58df180cf1d7","_type":"span","marks":[],"text":"With competition heating up in this space, it's essential to deliver a solid experience to your target customers. Therefore, it is imperative that you use a solid tech stack alongside the latest methodologies to build a secure, scalable & user-friendly digital product."}],"markDefs":[],"style":"normal"},{"_key":"94064ecaf9b6","_type":"block","children":[{"_key":"70a0d7bf0622","_type":"span","marks":["strong"],"text":"We focus on the following in this article -"}],"markDefs":[],"style":"normal"},{"_key":"2e88cae617f7","_type":"block","children":[{"_key":"abef01fe371f","_type":"span","marks":[],"text":"What is the Twelve-factor app (TFA)methodology and why use it?"}],"markDefs":[],"style":"normal"},{"_key":"a560d5543452","_type":"block","children":[{"_key":"919222de20290","_type":"span","marks":[],"text":"What is Kubernetes & why use it alongside TFA?"}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"081870113ff3","_type":"block","children":[{"_key":"0f0f778504460","_type":"span","marks":[],"text":"How to use TFA & Kubernetes to build a digital product?"}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"4a71a041ffe5","_type":"block","children":[{"_key":"ec75bdb2c23c0","_type":"span","marks":[],"text":"Going beyond the twelve-factor app"}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"488ca9077cee","_type":"block","children":[{"_key":"1490c702d00e0","_type":"span","marks":[],"text":"What to use Kubernetes or Docker for your next project?"}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"e3c6a5d56fe1","_type":"block","children":[{"_key":"2761245d611b0","_type":"span","marks":[],"text":"Let’s get started."}],"markDefs":[],"style":"normal"},{"_key":"6cf0476145fb","_type":"block","children":[{"_key":"bbdf5dd2b37b","_type":"span","marks":[],"text":"Applications built today are vastly different from those made just a decade back, both in development and infrastructure complexity. As a result, SaaS apps need to scale quickly to serve from a few thousand to possibly millions in a short period. To remain competitive, you will need to design your apps to be agile, ship features faster, and respond to customer feedback quickly."}],"markDefs":[],"style":"normal"},{"_key":"26a207e8c3fd","_type":"block","children":[{"_key":"41b3d84f0e880","_type":"span","marks":["strong","em"],"text":"The twelve-factor methodology helps you do just that!"}],"markDefs":[],"style":"normal"},{"_key":"e71379bd647b","_type":"block","children":[{"_key":"43311cc5590b","_type":"span","marks":[],"text":"What are 12 Factor Apps?"}],"markDefs":[],"style":"h2"},{"_key":"3a93f32188f8","_type":"block","children":[{"_key":"552b579ccd47","_type":"span","marks":["885eff5265b9"],"text":"The 12 Factor App"},{"_key":"87657ec7ffaf","_type":"span","marks":[],"text":" is a set of principles that describes software making that enables companies to create code that can be released faster, scaled easily. Also, the team can maintain code and configuration consistently and predictably."}],"markDefs":[{"_key":"885eff5265b9","_type":"link","href":"https://12factor.net/"}],"style":"normal"},{"_key":"8579dd4063a9","_type":"block","children":[{"_key":"b93435af97220","_type":"span","marks":[],"text":"Heroku, one of the earliest names in the cloud came up with the concept of the Twelve-Factor App in 2012."}],"markDefs":[],"style":"normal"},{"_key":"bced6afacdef","_type":"block","children":[{"_key":"bacbdc5a0ad9","_type":"span","marks":[],"text":"What will organizations gain?"}],"markDefs":[],"style":"h2"},{"_key":"576e852cee7f","_type":"customBlockQuote","customblockArray":[{"_key":"d35ef4eed970","_type":"block","children":[{"_key":"2c88177d142b","_type":"span","marks":[],"text":"“Good code fails when you don’t have a good process and a platform to help you. Good teams fail when you don’t have a good culture that embraces DevOps, microservices, and not giant monoliths.” — Tim Spann, Developer Advocate"}],"markDefs":[],"style":"normal"}]},{"_key":"34ad6006bc27","_type":"block","children":[{"_key":"975fd62ed830","_type":"span","marks":[],"text":"Organizations benefit from embracing the framework primarily in the areas of scalability, flexibility, and security."}],"markDefs":[],"style":"normal"},{"_key":"947c54f54ceb","_type":"block","children":[{"_key":"5c5d3f885216","_type":"span","marks":[],"text":"Scalability"}],"markDefs":[],"style":"h3"},{"_key":"9d96c7db4ea5","_type":"block","children":[{"_key":"53e11febda3e","_type":"span","marks":[],"text":"Scaling in and out is a core concept of 12-Factor apps. When experiencing high traffic, services shouldn’t hang/crash and scale out to ensure a good customer experience. On the other hand, when the traffic is back to normal or lower than average, services should scale down automatically. Hence using 12-Factors will ensure the organization effectively optimizes its infrastructure in terms of cost."}],"markDefs":[],"style":"normal"},{"_key":"36be443f55c5","_type":"block","children":[{"_key":"cefe090746e1","_type":"span","marks":[],"text":"Flexibility"}],"markDefs":[],"style":"h3"},{"_key":"c7236d7a902a","_type":"block","children":[{"_key":"1af8a26ad5d6","_type":"span","marks":[],"text":"All application processes must be loosely coupled, which results in a lower chance of application breakdown. If affected, only the part of the application (one service) should break. Also, this makes the application highly adaptive to change, resulting in reduced development efforts."}],"markDefs":[],"style":"normal"},{"_key":"e519589fd712","_type":"block","children":[{"_key":"12d1665c575e","_type":"span","marks":[],"text":"Security"}],"markDefs":[],"style":"h3"},{"_key":"9a2e9f99e16b","_type":"block","children":[{"_key":"07c8beab03ff","_type":"span","marks":[],"text":"Security is at the core of the twelve-factor methodology. It says that your credentials or any other confidential information should not be in the code repository but within the application’s environment variables. These environment variables are separately stored, and admins should protect them within Vault. This method ensures security and saves organizations from hacks, keeping brand value intact."}],"markDefs":[],"style":"normal"},{"Separatorr":true,"_key":"676511c99ce6","_type":"separator"},{"_key":"aaff98290c8e","_type":"block","children":[{"_key":"99e7d3b614f8","_type":"span","marks":[],"text":"What is Kubernetes?"}],"markDefs":[],"style":"h2"},{"_key":"d55bad7408b4","_type":"block","children":[{"_key":"e045c5104478","_type":"span","marks":["f15a6214c4ae"],"text":"Kubernetes"},{"_key":"74f179ed23a3","_type":"span","marks":[],"text":", also known as K8s, is an open-source system for automating deployment, scaling, and management of containerized applications. The name is derived from the Greek language meaning pilot or helmsman."}],"markDefs":[{"_key":"f15a6214c4ae","_type":"link","href":"https://kubernetes.io/docs/concepts/overview/what-is-kubernetes/"}],"style":"normal"},{"_key":"2e3ba6de404a","_type":"block","children":[{"_key":"81f1164296ae0","_type":"span","marks":[],"text":"K8s as an abbreviation results from counting the eight letters between the “K” and the “s”. Google open-sourced the Kubernetes project in 2014. Kubernetes combines "},{"_key":"81f1164296ae1","_type":"span","marks":["1c441f267f3e"],"text":"over 15 years of Google’s experience"},{"_key":"81f1164296ae2","_type":"span","marks":[],"text":" running production workloads at scale with best-of-breed ideas and practices from the community."}],"markDefs":[{"_key":"1c441f267f3e","_type":"link","href":"https://kubernetes.io/blog/2015/04/borg-predecessor-to-kubernetes/"}],"style":"normal"},{"_key":"29973183bf21","_type":"block","children":[{"_key":"083cbe63a1770","_type":"span","marks":[],"text":"Kubernetes has a large, rapidly growing ecosystem. Kubernetes services, support, and tools are widely available."}],"markDefs":[],"style":"normal"},{"_key":"09e5091a5152","_type":"block","children":[{"_key":"b080ac88477c0","_type":"span","marks":[],"text":"The adoption of this system has seen rapid growth too. For instance, the adoption grew from 27% in 2018 to almost 48% in 2020. "},{"_key":"b080ac88477c1","_type":"span","marks":["em"],"text":"("},{"_key":"b080ac88477c2","_type":"span","marks":["71df560db04e","em"],"text":"Source: Container Journal"},{"_key":"b080ac88477c3","_type":"span","marks":["em"],"text":")"}],"markDefs":[{"_key":"71df560db04e","_type":"link","href":"https://containerjournal.com/topics/container-ecosystems/report-kubernetes-use-on-the-rise/"}],"style":"normal"},{"_key":"c29ec099e582","_type":"block","children":[{"_key":"745c669e9e47","_type":"span","marks":[],"text":"Check out more interesting statistics about Kubernetes here —"}],"markDefs":[],"style":"normal"},{"_key":"a64015343a81","_type":"urllink","shortDescription":"How is Kubernetes impacting enterprise IT? Let's unpack a dozen (and then some) numbers that speak to Kubernetes' continuing rise to IT ascendancy","title":"Kubernetes by the numbers, in 2020: 12 stats to see","urlLink":"https://enterprisersproject.com/article/2020/6/kubernetes-statistics-2020","urlLinkImage":{"_type":"customImage","asset":{"_ref":"image-111725b8e8f5e3e34fa5f9bdc4bc022727b02597-480x271-png","_type":"reference"}}},{"_key":"4aad911838c3","_type":"block","children":[{"_key":"1ee473ba3342","_type":"span","marks":[],"text":"Learn more about Kubernetes in this amazing illustrated video -"}],"markDefs":[],"style":"normal"},{"_key":"79c9af14ae32","_type":"youtube","url":"https://youtu.be/3I9PkvZ80BQ"},{"_key":"87a2e155f2b9","_type":"block","children":[{"_key":"5dcc99374187","_type":"span","marks":[],"text":"Key Benefits of using Kubernetes"}],"markDefs":[],"style":"h2"},{"_key":"05b24063c9d5","_type":"block","children":[{"_key":"0a3b8072996f","_type":"span","marks":[],"text":"Right from containerizing monolithic applications, enabling a move to the cloud, and reducing public cloud costs, Kubernetes brings positive outcomes across the board to both development and operations."}],"markDefs":[],"style":"normal"},{"_key":"36db0d7912c8","_type":"customImage","asset":{"_ref":"image-26a177ede4d7b032362289c6fccd448fc4a91174-1498x552-svg","_type":"reference"},"imageFigcaptionName":"via kubernetes.io"},{"_key":"ee0aec943bc7","_type":"block","children":[{"_key":"65c94246a613","_type":"span","marks":["348ca6a21740"],"text":"Drew Rothstein, Director of Engineering at Coinbase"},{"_key":"25e962f30048","_type":"span","marks":[],"text":" very rightly says,"}],"markDefs":[{"_key":"348ca6a21740","_type":"link","href":"https://www.drewrothstein.com/"}],"style":"normal"},{"_key":"a70a133de372","_type":"customBlockQuote","customblockArray":[{"_key":"309eecc7e539","_type":"block","children":[{"_key":"e1d9ab637346","_type":"span","marks":[],"text":"Companies choose to containerize their applications to increase engineering output/developer productivity in a quick, safe, and reliable manner. Containerizing is a choice made vs. building images, although containers can sometimes be built into images, but that is out of scope (ref)."}],"markDefs":[],"style":"normal"}]},{"_key":"0b1d867e7388","_type":"block","children":[{"_key":"1b2f736a72f6","_type":"span","marks":["strong"],"text":"Besides he also nicely sums up that —"}],"markDefs":[],"style":"normal"},{"_key":"7e5f3de12181","_type":"block","children":[{"_key":"805d8461bd21","_type":"span","marks":[],"text":"Containers help engineers to develop, test, and run their applications locally in the same or similar manner that they will run in other environments (staging and production)."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"4ea267b313ba","_type":"block","children":[{"_key":"3857018bde2c0","_type":"span","marks":[],"text":"These enable bundling of dependencies to be articulated and explicit vs. implied. Moreover, containers allow for more discreet service encapsulation and resource definition (using X CPUs and Y GB of Memory). You can scale your application horizontally vs. vertically, resulting in more robust architectural decisions."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"4758ee461868","_type":"block","children":[{"_key":"9a96dda290fa","_type":"span","marks":["strong"],"text":"Problems solved by Kubernetes include —"}],"markDefs":[],"style":"normal"},{"_key":"02e582219de8","_type":"block","children":[{"_key":"9667fda17206","_type":"span","marks":[],"text":"Managed/Standardized deployment tooling (deployment)."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"643fc5ad46a0","_type":"block","children":[{"_key":"596e342fa38d0","_type":"span","marks":[],"text":"Scaling of applications based on some defined heuristic (horizontal scaling)."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"c017176d0c21","_type":"block","children":[{"_key":"04d3e95879f60","_type":"span","marks":[],"text":"Re-scheduling/Moving containers when failures occur (self-healing)."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"67d3ad135050","_type":"block","children":[{"_key":"b6fca4b5e0f5","_type":"span","marks":[],"text":"Combining Twelve-Factor App with Kubernetes"}],"markDefs":[],"style":"h2"},{"_key":"e7846d8709f8","_type":"block","children":[{"_key":"656983e94e87","_type":"span","marks":[],"text":"Here are "},{"_key":"b516fa290923","_type":"span","marks":["c22735be87ba"],"text":"The Twelve Factors"},{"_key":"604b514d2fc2","_type":"span","marks":[],"text":" in brief:"}],"markDefs":[{"_key":"c22735be87ba","_type":"link","href":"https://12factor.net/"}],"style":"normal"},{"_key":"21e6b671853f","_type":"block","children":[{"_key":"3fbb3eec7423","_type":"span","marks":["strong"],"text":"Codebase"},{"_key":"719a1bdddd11","_type":"span","marks":[],"text":": One codebase tracked in revision control, many deploys"}],"level":1,"listItem":"number","markDefs":[],"style":"normal"},{"_key":"7017470b50c0","_type":"block","children":[{"_key":"830be64bfe17","_type":"span","marks":["strong"],"text":"Dependencies"},{"_key":"3ec685b1d3611","_type":"span","marks":[],"text":": Explicitly declare and isolate dependencies"}],"level":1,"listItem":"number","markDefs":[],"style":"normal"},{"_key":"adaab97dd4b6","_type":"block","children":[{"_key":"19f55de868e30","_type":"span","marks":["strong"],"text":"Config"},{"_key":"19f55de868e31","_type":"span","marks":[],"text":": Store config in the environment"}],"level":1,"listItem":"number","markDefs":[],"style":"normal"},{"_key":"bc23ee9938c8","_type":"block","children":[{"_key":"a02b32cb011e0","_type":"span","marks":["strong"],"text":"Backing services"},{"_key":"a02b32cb011e1","_type":"span","marks":[],"text":": Treat backing services as attached resources"}],"level":1,"listItem":"number","markDefs":[],"style":"normal"},{"_key":"511ea8240a03","_type":"block","children":[{"_key":"eec9912874530","_type":"span","marks":["strong"],"text":"Build, release, run:"},{"_key":"eec9912874531","_type":"span","marks":[],"text":" Strictly separate build and run stages"}],"level":1,"listItem":"number","markDefs":[],"style":"normal"},{"_key":"8875c37ef8aa","_type":"block","children":[{"_key":"4af1b323996b0","_type":"span","marks":["strong"],"text":"Processes"},{"_key":"4af1b323996b1","_type":"span","marks":[],"text":": Execute the app as one or more stateless processes"}],"level":1,"listItem":"number","markDefs":[],"style":"normal"},{"_key":"415408b555bf","_type":"block","children":[{"_key":"abaf4c9799c40","_type":"span","marks":["strong"],"text":"Port binding"},{"_key":"abaf4c9799c41","_type":"span","marks":[],"text":": Export services via port binding"}],"level":1,"listItem":"number","markDefs":[],"style":"normal"},{"_key":"c1b778d2f7ef","_type":"block","children":[{"_key":"714032a93e000","_type":"span","marks":["strong"],"text":"Concurrency"},{"_key":"714032a93e001","_type":"span","marks":[],"text":": Scale-out via the process model"}],"level":1,"listItem":"number","markDefs":[],"style":"normal"},{"_key":"9bdeea43321d","_type":"block","children":[{"_key":"6ffc72acdc7d0","_type":"span","marks":["strong"],"text":"Disposability"},{"_key":"6ffc72acdc7d1","_type":"span","marks":[],"text":": Maximize robustness with fast startup and graceful shutdown"}],"level":1,"listItem":"number","markDefs":[],"style":"normal"},{"_key":"5dddb2caa430","_type":"block","children":[{"_key":"59fe67880e130","_type":"span","marks":["strong"],"text":"Dev/prod parity"},{"_key":"59fe67880e131","_type":"span","marks":[],"text":": Keep development, staging, and production as similar as possible"}],"level":1,"listItem":"number","markDefs":[],"style":"normal"},{"_key":"d31342962155","_type":"block","children":[{"_key":"182f88a602e60","_type":"span","marks":["strong"],"text":"Logs"},{"_key":"182f88a602e61","_type":"span","marks":[],"text":": Treat logs as event streams"}],"level":1,"listItem":"number","markDefs":[],"style":"normal"},{"_key":"2102a9a34b83","_type":"block","children":[{"_key":"fbe786a82bac0","_type":"span","marks":["strong"],"text":"Admin processes"},{"_key":"fbe786a82bac1","_type":"span","marks":[],"text":": Run admin/management tasks as one-off processes"}],"level":1,"listItem":"number","markDefs":[],"style":"normal"},{"_key":"8e2ee36caded","_type":"block","children":[{"_key":"56ab8e2d334f0","_type":"span","marks":[],"text":"Let’s explore them in detail and how you may leverage few services of Kubernetes."}],"markDefs":[],"style":"normal"},{"Separatorr":true,"_key":"3f3b037af5a3","_type":"separator"},{"_key":"8ecd8e43402b","_type":"block","children":[{"_key":"1d3027cbd46b","_type":"span","marks":[],"text":"I. Codebase"}],"markDefs":[],"style":"h2"},{"_key":"b80c23f7b442","_type":"block","children":[{"_key":"fc6fae4444ae0","_type":"span","marks":["strong","em"],"text":"One codebase tracked in revision control, many deploys"}],"markDefs":[],"style":"blockquote"},{"_key":"9b75cf2d4aac","_type":"block","children":[{"_key":"a448237f25cc0","_type":"span","marks":[],"text":"The Codebase factor states that all code must be stored in a single codebase. Thus, essentially enabling us to deploy the same codebase across different environments such as prod/QA/Staging/Dev, just with different configurations."}],"markDefs":[],"style":"normal"},{"_key":"629d41b32959","_type":"block","children":[{"_key":"c0c8e36413600","_type":"span","marks":[],"text":"In the same code base, Kubernetes-related configurations, i.e., Configmap and even docker files, can be stored. This repository should be a part of your CI/CD pipeline, which will eventually take care of the other part of this factor — many deploy"},{"_key":"c0c8e36413601","_type":"span","marks":["strong"],"text":"."}],"markDefs":[],"style":"normal"},{"_key":"37b453faf6b6","_type":"customImage","asset":{"_ref":"image-539293cee1c5623e4d7a3cd14eae98a3d822ec1e-700x475-jpg","_type":"reference"}},{"_key":"82b78da328a7","_type":"block","children":[{"_key":"c08ee114c1ba","_type":"span","marks":[],"text":"II. Dependencies"}],"markDefs":[],"style":"h2"},{"_key":"1cd68b23b7e4","_type":"block","children":[{"_key":"5a94e14958a0","_type":"span","marks":["strong","em"],"text":"Explicitly declare and isolate dependencies"}],"markDefs":[],"style":"normal"},{"_key":"34dc54836feb","_type":"block","children":[{"_key":"675e83b90dfe","_type":"span","marks":[],"text":"This factor talks about the packages that the application will require. Also, the same packages must be isolated from code and declare separately. One should never pre-assume that packages required by application would be available in the deployment environment."}],"markDefs":[],"style":"normal"},{"_key":"fc151cac2354","_type":"block","children":[{"_key":"011addf5c9a30","_type":"span","marks":[],"text":"In Kubernetes, the application’s microservice would be running independently from other microservices. Each microservices would have an independent file for the containers (docker, this file is called docker file). All dependant packages required to run microservices would be explicitly declared and installed in this container file or docker file while building docker images."}],"markDefs":[],"style":"normal"},{"_key":"5af111f4641b","_type":"block","children":[{"_key":"a46c7a2144d20","_type":"span","marks":[],"text":"Finally, words of wisdom:  "},{"_key":"a46c7a2144d21","_type":"span","marks":["strong"],"text":"the container can include all of the dependencies that the application relies upon and provides a reasonably isolated environment in which the container runs."}],"markDefs":[],"style":"normal"},{"_key":"c33b55ad9e58","_type":"customImage","asset":{"_ref":"image-d77668cb31c1619ec320e0f96dfc6130b13a1189-1348x1351-jpg","_type":"reference"}},{"_key":"b9840a6b5ac1","_type":"block","children":[{"_key":"6e1ac6963bb7","_type":"span","marks":[],"text":"There are two ways to achieve this with example docker and requirement file:"}],"markDefs":[],"style":"normal"},{"_key":"6e07faafcdfe","_type":"block","children":[{"_key":"3277791093370","_type":"span","marks":[],"text":"Put installation dependencies in the docker file itself as the example shown below :"}],"level":1,"listItem":"number","markDefs":[],"style":"normal"},{"_key":"fa7c4f33b142","_type":"code","code":"FROM python:3\r\nRUN pip install --no-cache-dir --upgrade pip && \\\r\n    pip install --no-cache-dir nibabel pydicom matplotlib pillow && \\\r\n    pip install --no-cache-dir med2image\r\nCMD [\"cat\", \"/etc/os-release\"]"},{"_key":"0697a5540820","_type":"block","children":[{"_key":"444309344624","_type":"span","marks":[],"text":"2. Put installation dependencies in the separate file call requirement.txt and use your generic docker file to create docker images like the example shown below :\n"}],"markDefs":[],"style":"normal"},{"_key":"af4dc94e802b","_type":"code","code":"requirements.txt"},{"_key":"923c38c36aaf","_type":"code","code":"matplotlib\r\nmed2image\r\nnibabel\r\npillow\r\npydi"},{"_key":"4c5107437bb9","_type":"block","children":[{"_key":"eacdfb36a6b2","_type":"span","marks":["em"],"text":"and use the following generic"},{"_key":"ed59584a1850","_type":"span","marks":[],"text":" "},{"_key":"06f04850f7d8","_type":"span","marks":["em","strong"],"text":"Dockerfile"}],"markDefs":[],"style":"blockquote"},{"_key":"e11211292662","_type":"code","code":"FROM python:3\r\nWORKDIR /usr/src/app\r\nCOPY requirements.txt ./\r\nRUN pip install --no-cache-dir --upgrade pip && \\\r\n    pip install --no-cache-dir -r requirements.txt\r\nCOPY . .\r\nCMD [ \"python\", \"./your-daemon-or-script.py\" ]"},{"_key":"f9faa586bd33","_type":"block","children":[{"_key":"4aa64f7a033f","_type":"span","marks":[],"text":"III. Config"}],"markDefs":[],"style":"h2"},{"_key":"e8e8a06b1d1e","_type":"block","children":[{"_key":"d2ccc63b21730","_type":"span","marks":["strong","em"],"text":"Store config in the environment"}],"markDefs":[],"style":"blockquote"},{"_key":"4a433afd0f74","_type":"block","children":[{"_key":"609f254696670","_type":"span","marks":[],"text":"This principle ensures that your source code would remain the same while deploying to a different environment. Generally, the DevOps lifecycle flows through different environment like Dev ->Test -> QA -> Prod. Now let’s assume the situation where developers have stored database configuration in code, hence to make this code work, application code has to be different in all four environments. "},{"_key":"609f254696671","_type":"span","marks":["strong"],"text":"Voila, this violates the first principle!"}],"markDefs":[],"style":"normal"},{"_key":"8be01f939903","_type":"block","children":[{"_key":"70aac63c07650","_type":"span","marks":[],"text":"Twelve-Factor states to save all external configuration to environment variables. This is easy to change between the deploys without having to change the code in the DevOps lifecycle."}],"markDefs":[],"style":"normal"},{"_key":"d179d83013af","_type":"block","children":[{"_key":"526dcc5854df0","_type":"span","marks":[],"text":"Fortunately, Kubernetes "},{"_key":"526dcc5854df1","_type":"span","marks":["60ea22a601d8"],"text":"Secrets"},{"_key":"526dcc5854df2","_type":"span","marks":[],"text":" and "},{"_key":"526dcc5854df3","_type":"span","marks":["99583451b700"],"text":"Configmaps"},{"_key":"526dcc5854df4","_type":"span","marks":[],"text":" let you store and manage sensitive information, such as passwords, tokens, database connection strings with authentication details. The information stored in Kubernetes secrets cannot be tracked and traced back even if the application gets compromised."}],"markDefs":[{"_key":"60ea22a601d8","_type":"link","href":"https://kubernetes.io/docs/concepts/configuration/secret/"},{"_key":"99583451b700","_type":"link","href":"https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/"}],"style":"normal"},{"_key":"4fd2bb1cb4b1","_type":"block","children":[{"_key":"7dfc0f4117ca0","_type":"span","marks":[],"text":"This is a sample Yaml for fetching the configuration."}],"markDefs":[],"style":"normal"},{"_key":"df9877b55ec6","_type":"code","code":"apiVersion: v1\r\n kind: Pod\r\n metadata:\r\n   name: User-services\r\n spec:\r\n   containers:\r\n     - name: user-service\r\n       image: userservice\r\n       env:\r\n        # Define the environment variable\r\n         - name: MONGO_CONNECTION_STRG\r\n           valueFrom:\r\n             secretKeyRef:\r\n               name: mongsecretes\r\n               key: mongo-connection-string # To Store value in env \r\n       env:\r\n        - name: USER_CURRENT_STATE\r\n          valueFrom:\r\n            configMapKeyRef:\r\n              name: user-prod-valus          \r\n              key: user_init_state # To Store value in env"},{"_key":"f932c47b0950","_type":"block","children":[{"_key":"841db30a5001","_type":"span","marks":[],"text":"In the above example, we store the connection string value to environment variable MONGO_CONNECTION_STRG from Kubernetes secrets. In the same way, we are storing the user’s initial state value from the config map to the environment variable USER_CURRENT_STATE."}],"markDefs":[],"style":"normal"},{"_key":"5280fba8471a","_type":"block","children":[{"_key":"f092cc52282f0","_type":"span","marks":[],"text":"Your secrets and Configmap will vary from one environment to other and flows seamlessly along with CI/CD pipeline."}],"markDefs":[],"style":"normal"},{"_key":"5c13a59574bc","_type":"customImage","asset":{"_ref":"image-94f22990397c1bf86d5a785141c2beebab7972a8-1653x1102-jpg","_type":"reference"}},{"_key":"07fb606c4500","_type":"block","children":[{"_key":"fe69f3aa474c","_type":"span","marks":[],"text":"IV. Backing services"}],"markDefs":[],"style":"h2"},{"_key":"ee13bd57301a","_type":"block","children":[{"_key":"8c382308767d","_type":"span","marks":["strong","em"],"text":"Treat backing services as attached resources"}],"markDefs":[],"style":"blockquote"},{"_key":"f5390f7873b7","_type":"block","children":[{"_key":"6c227229c40b0","_type":"span","marks":[],"text":"In a 12-Factor App, Backing services means any services required by the application to the consumer over the network. These services could be hosted locally or to any cloud provider. A few good examples of backing services could be databases like MySQL, email services like SMTP, Storage services like s3 buckets."}],"markDefs":[],"style":"normal"},{"_key":"4dc6e798faed","_type":"block","children":[{"_key":"5ac2a55f70d60","_type":"span","marks":[],"text":"A 12 Factor app shouldn’t distinguish between the application service and backend service. Backend service should be callable from an HTTPS protocol or a connection string stored in the config. This is already discussed in the previous section."}],"markDefs":[],"style":"normal"},{"_key":"3ad80aa32202","_type":"block","children":[{"_key":"5a2784d50b960","_type":"span","marks":[],"text":"If any configuration changes have to be made in Backend services, there should be no change in code. Code should be intact! For example, if your application uses a message queuing system, you should be able to change from Inhouse RabbitMQ to Amazon’s SQS or even something else without having to change anything but configuration information."}],"markDefs":[],"style":"normal"},{"_key":"129bcf97ceb2","_type":"block","children":[{"_key":"6731c8ecf7f30","_type":"span","marks":[],"text":"For 12 Factor apps Designed for Kubernetes, there are two ways you can implement this factor."}],"markDefs":[],"style":"normal"},{"_key":"aeb508f86137","_type":"block","children":[{"_key":"49b2f8765cde0","_type":"span","marks":["strong"],"text":"The stateful States within Kubernetes:"},{"_key":"49b2f8765cde1","_type":"span","marks":[],"text":" Backend services deployed in Kubernetes pods are load-balanced through the "},{"_key":"49b2f8765cde2","_type":"span","marks":["4d2e6b0cabea"],"text":"service"},{"_key":"49b2f8765cde3","_type":"span","marks":[],"text":" component of Kubernetes. You may spin any databases and Queue service in Kubernetes as the configuration is stored in environment variable through Configmap, and communication happens through the "},{"_key":"49b2f8765cde4","_type":"span","marks":["b33cf6397767"],"text":"service"},{"_key":"49b2f8765cde5","_type":"span","marks":[],"text":" component of Kubernetes."}],"level":1,"listItem":"number","markDefs":[{"_key":"4d2e6b0cabea","_type":"link","href":"https://kubernetes.io/docs/concepts/services-networking/service/"},{"_key":"b33cf6397767","_type":"link","href":"https://kubernetes.io/docs/concepts/services-networking/service/"}],"style":"normal"},{"_key":"fd6cb41ce22b","_type":"block","children":[{"_key":"f3dda0020da70","_type":"span","marks":["strong"],"text":"The stateful States outside Kubernetes:"},{"_key":"f3dda0020da71","_type":"span","marks":[],"text":" This setup will be pretty state-forward. All backing service configuration should be stored inside Kubernetes secrets and Configmaps. This will be fetched as an environment variable during deployment on production."}],"level":1,"listItem":"number","markDefs":[],"style":"normal"},{"_key":"4259167113b0","_type":"customImage","asset":{"_ref":"image-60b3b269b547f3a52239dc797eea9ce3de9a0d89-1652x1102-jpg","_type":"reference"}},{"_key":"593b1cdcef80","_type":"block","children":[{"_key":"ca7c9c1e4862","_type":"span","marks":[],"text":"V. Build, release, run"}],"markDefs":[],"style":"h2"},{"_key":"80c7c15fe93d","_type":"block","children":[{"_key":"1af3a7237212","_type":"span","marks":["strong","em"],"text":"Strictly separate build and run stages"}],"markDefs":[],"style":"blockquote"},{"_key":"10f197bb252a","_type":"block","children":[{"_key":"8347b5af16dd0","_type":"span","marks":[],"text":"This factor talks about separating three stages for the deployment process, which are :"}],"markDefs":[],"style":"normal"},{"_key":"4c9424fd539e","_type":"block","children":[{"_key":"ffed8664829e0","_type":"span","marks":["strong"],"text":"Build:"},{"_key":"ffed8664829e1","_type":"span","marks":[],"text":" This stage will pull the code and convert it into executables like docker image or artifact, which should be store in artifactory repositories like Maven or docker hub or private repository like a "},{"_key":"ffed8664829e2","_type":"span","marks":["1ae69f0c51c6"],"text":"harbor"},{"_key":"ffed8664829e3","_type":"span","marks":[],"text":"."}],"level":1,"listItem":"number","markDefs":[{"_key":"1ae69f0c51c6","_type":"link","href":"https://goharbor.io/"}],"style":"normal"},{"_key":"2701bbaab7d4","_type":"block","children":[{"_key":"faa72e5559910","_type":"span","marks":["strong"],"text":"Release:"},{"_key":"faa72e5559911","_type":"span","marks":[],"text":" In this stage, The configurations stored in the environment variable are applied to the image/artifactory created in the previous stage. The configuration and the image/artifactory will get your services ready to move to the deployment environment. The configurations are stored in Kubernetes Configmap or secrets or environment variables. Generally, for a deployment environment like Kubernetes, "},{"_key":"faa72e5559912","_type":"span","marks":["61d3e26bfe23"],"text":"helm"},{"_key":"faa72e5559913","_type":"span","marks":[],"text":" can be leveraged as a release and deployment tool in CI/CD pipeline."}],"level":1,"listItem":"number","markDefs":[{"_key":"61d3e26bfe23","_type":"link","href":"https://helm.sh/"}],"style":"normal"},{"_key":"0e7794e1afdc","_type":"block","children":[{"_key":"a12e989615da0","_type":"span","marks":["strong"],"text":"Run:"},{"_key":"a12e989615da1","_type":"span","marks":[],"text":" This stage runs the application released in the previous stage in a deployment environment such as Kubernetes."}],"level":1,"listItem":"number","markDefs":[],"style":"normal"},{"_key":"0240dd5bd20c","_type":"customImage","asset":{"_ref":"image-79adf78b0b52f61f04b705495a37419b192d7ee4-1888x965-jpg","_type":"reference"}},{"_key":"b973a9692694","_type":"block","children":[{"_key":"c1c6d6666e62","_type":"span","marks":[],"text":"As shown in the image above, In the Release stage, the configuration will be applied with docker image or refectory with the help of "},{"_key":"2e501654d130","_type":"span","marks":["4ac89483d22d"],"text":"helm"},{"_key":"e015e9ba513d","_type":"span","marks":[],"text":" to be deployed in Kubernetes to run the process."}],"markDefs":[{"_key":"4ac89483d22d","_type":"link","href":"https://helm.sh/"}],"style":"normal"},{"_key":"3f4d8a3260c0","_type":"block","children":[{"_key":"cee29c2f7acd","_type":"span","marks":[],"text":"VI. Processes"}],"markDefs":[],"style":"h2"},{"_key":"3aa66d937e73","_type":"block","children":[{"_key":"501eca8ff76c","_type":"span","marks":["strong","em"],"text":"Execute the app as one or more stateless processes"}],"markDefs":[],"style":"blockquote"},{"_key":"78f347997f20","_type":"block","children":[{"_key":"d3f41a979dc60","_type":"span","marks":["strong"],"text":"Stateless processes:"},{"_key":"d3f41a979dc61","_type":"span","marks":[],"text":" The process shouldn’t hold any data, i.e., session data or sticky sessions. Any persistent data must preserve inside the backing services, which are discussed in the previous section."}],"markDefs":[],"style":"normal"},{"_key":"0c827bdbb09f","_type":"block","children":[{"_key":"1a09a17bde350","_type":"span","marks":[],"text":"Let’s consider the scenario where developers store session information inside processes, assuming the subsequent request(s) will serve quicker. But, what if services needed scaling, new processes have evolved, and the next request goes to another process just created. The newly evolved process doesn’t have session data and Boom! — To save time, unknowingly, the user experience will suffer."}],"markDefs":[],"style":"normal"},{"_key":"c5445752efe1","_type":"block","children":[{"_key":"d79293b5e0b10","_type":"span","marks":[],"text":"All data must be preserved in the backing services like Database or Queues or Caching Services to overcome the above challenge. This makes scaling easier. "},{"_key":"d79293b5e0b11","_type":"span","marks":["strong"],"text":"No tracking inside the process! That’s all"},{"_key":"d79293b5e0b12","_type":"span","marks":[],"text":". In Kubernetes, pods will be serving the user requests. HPA controls the number of pods or scaling of the pod. The number of pods at any given point in time depends on the limits defines in HPA. The number of pods running can go from 1 to N in seconds, depending on traffic volume. Hence preserving data inside pods is a bad idea! Design should leverage backing services as stateful sets to store the data."}],"markDefs":[],"style":"normal"},{"_key":"9d63fa08b609","_type":"customImage","asset":{"_ref":"image-96a82cc6f362e71bbb308f36d5aa2dd4a79c5887-1662x1096-jpg","_type":"reference"}},{"_key":"19b92f7fd5b5","_type":"block","children":[{"_key":"30d9d81ae16a","_type":"span","marks":[],"text":"VII. Port binding"}],"markDefs":[],"style":"h2"},{"_key":"80f3105e6965","_type":"block","children":[{"_key":"a5b7834834a90","_type":"span","marks":["strong","em"],"text":"Export services via port binding"}],"markDefs":[],"style":"blockquote"},{"_key":"82554648ac54","_type":"block","children":[{"_key":"2af4b85001880","_type":"span","marks":[],"text":"The app which complies with 12-Factor should be self-sufficient to accept client requests to the desired port. All application services would be bind and exposed with a port that will listen to incoming requests."}],"markDefs":[],"style":"normal"},{"_key":"5fbcc8105634","_type":"block","children":[{"_key":"def87b7bc7570","_type":"span","marks":[],"text":"In Kubernetes, this portion is covered while designing containers. Containers of the same services expose to one port where they will listen to HTTP requests. This port will bind to Kubernetes services, which will pass incoming requests from Kubernetes’ services to underlying pods/containers. The image below illustrates the same."}],"markDefs":[],"style":"normal"},{"_key":"20e642f9b2a2","_type":"customImage","asset":{"_ref":"image-cf1218b30ad7fc2a7ea00ed5f0690044a063bd21-1269x1435-jpg","_type":"reference"}},{"_key":"8ca1482aaa87","_type":"block","children":[{"_key":"48cd5154015d","_type":"span","marks":[],"text":"This is an example of a docker file where can expose a port."}],"markDefs":[],"style":"normal"},{"_key":"fb2dfdbdc1e1","_type":"code","code":"FROM node:alpine\r\n# Create app directory\r\nWORKDIR /home/myappservices\r\n# Install app dependencies\r\nRUN npm install\r\nEXPOSE 8090 ## Your pods will listern to this port\r\nCMD [ \"npm\", \"start\" ]"},{"_key":"0d4a78bb9001","_type":"block","children":[{"_key":"c7e9a1bbf129","_type":"span","marks":[],"text":"This is an example of the service definition of Kubernetes"}],"markDefs":[],"style":"normal"},{"_key":"80fe9483ab65","_type":"code","code":"kind: Service\r\napiVersion: v1\r\nmetadata:\r\n  name: test-app-service\r\n  namespace: example\r\n  \r\nspec:\r\n  type: LoadBalancer\r\n  selector:\r\n    app: test-app-service\r\n  ports:\r\n    - name: http\r\n      protocol: TCP\r\n      port: 80 ### Port where K8s Services will listen to requests\r\n      targetPort: 80  ## K8s Forward requests to Containers"},{"_key":"4b2fa9b3cb4a","_type":"block","children":[{"_key":"15ed4f4e1f26","_type":"span","marks":[],"text":"VIII. Concurrency"}],"markDefs":[],"style":"h2"},{"_key":"517571330b4e","_type":"block","children":[{"_key":"e994f5d42b270","_type":"span","marks":["strong","em"],"text":"Scale out via the process model"}],"markDefs":[],"style":"blockquote"},{"_key":"eeda6c341899","_type":"block","children":[{"_key":"2da606e5fc8c","_type":"span","marks":[],"text":"This factor talks about the most critical concept of any application design, which is scaling. If the application is not scalable, the user experience will suffer eventually. This factor allows the application to design so that the application processes must be scale horizontally but not vertically."}],"markDefs":[],"style":"normal"},{"_key":"f9d8164f1182","_type":"block","children":[{"_key":"61a45d6eff100","_type":"span","marks":[],"text":"If the application is supporting concurrency, each process of your application should scale independently and vertically. If this factor is not supported, you may have to scale up the complete application, which will be a costly affair."}],"markDefs":[],"style":"normal"},{"_key":"43be57884af2","_type":"block","children":[{"_key":"ee851c3621f50","_type":"span","marks":[],"text":"Kubernetes has its own scaling mechanism, which can be applied to each microservices (aka process). The microservices can be scaled up and down based on memory, CPU, TPS, and queue length. In Kubernetes responsible module for scaling is "},{"_key":"ee851c3621f51","_type":"span","marks":["98c90407bdb9"],"text":"HPA"},{"_key":"ee851c3621f52","_type":"span","marks":[],"text":"."}],"markDefs":[{"_key":"98c90407bdb9","_type":"link","href":"https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/"}],"style":"normal"},{"_key":"122b62954ac7","_type":"block","children":[{"_key":"916e4534e8d70","_type":"span","marks":[],"text":"This diagram illustrates pods scaling as per traffic flow in Kubernetes for single process or microservices :"}],"markDefs":[],"style":"normal"},{"_key":"744baf6bc9bc","_type":"customImage","asset":{"_ref":"image-97d724ddad8118abfa3d34bc835341d2a8aa9587-1712x1064-jpg","_type":"reference"}},{"_key":"df98be581c09","_type":"block","children":[{"_key":"48e2556cd1f6","_type":"span","marks":[],"text":"IX. Disposability"}],"markDefs":[],"style":"h2"},{"_key":"a2653c24989b","_type":"block","children":[{"_key":"00bc641b55ca","_type":"span","marks":["strong","em"],"text":"Maximize robustness with fast startup and graceful shutdown"}],"markDefs":[],"style":"blockquote"},{"_key":"5fb393ba6c2f","_type":"block","children":[{"_key":"a3b5c322afad0","_type":"span","marks":[],"text":"This factor addresses how the app process should start and stop. The app process should start quickly and handshake with all external processes (like DB and queues) to maintain robustness."}],"markDefs":[],"style":"normal"},{"_key":"e062aaaf7e7f","_type":"block","children":[{"_key":"c4d60d13fa590","_type":"span","marks":[],"text":"If the process is killed or crashed, the external handshakes should also get terminated immediately, which should log the reason for failure or crash. This provides various benefits to the app, like quick code deployments, more agility for the release process, and robust production deployments."}],"markDefs":[],"style":"normal"},{"_key":"da7f75a14d8b","_type":"block","children":[{"_key":"3a74cf5abf6b0","_type":"span","marks":[],"text":"It seems like this principle is designed for Kubernetes, as Kubernetes have this feature in build in terms of deployment and HPAs.Both will take care of seamless scaling and, at the same time, ensures the robustness of pods."}],"markDefs":[],"style":"normal"},{"_key":"e3f492effb8c","_type":"customImage","asset":{"_ref":"image-a188fc65c97b8bc61178fa4e8e1e32198e5d07ea-1534x1187-jpg","_type":"reference"}},{"_key":"1395aa6dd3af","_type":"block","children":[{"_key":"550722ed894f","_type":"span","marks":[],"text":"X. Dev/prod parity"}],"markDefs":[],"style":"h2"},{"_key":"58e299d2cf5f","_type":"block","children":[{"_key":"2127a2a6cfee","_type":"span","marks":["strong","em"],"text":"Keep development, staging, and production as similar as possible"}],"markDefs":[],"style":"blockquote"},{"_key":"03590a1f57b1","_type":"block","children":[{"_key":"a77fa490e1ae0","_type":"span","marks":[],"text":"12 Factor advocates to keep same code in all environment, however backing services in all environment can’t be same, some gaps are unavoidable, those gaps factors into :"}],"markDefs":[],"style":"normal"},{"_key":"0e8017ad4a08","_type":"block","children":[{"_key":"037e1751c5730","_type":"span","marks":["strong"],"text":"The time gap"},{"_key":"037e1751c5731","_type":"span","marks":[],"text":": A developer may work on code that takes days, weeks, or even months to go into production."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"f81d46d9244b","_type":"block","children":[{"_key":"65b5a7012bd00","_type":"span","marks":["strong"],"text":"The personnel gap"},{"_key":"65b5a7012bd01","_type":"span","marks":[],"text":": Developers write code, ops engineers deploy it."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"ede0aa6af39b","_type":"block","children":[{"_key":"1b9f33814dbe0","_type":"span","marks":["strong"],"text":"The tools gap"},{"_key":"1b9f33814dbe1","_type":"span","marks":[],"text":": Developers may be using a stack like Nginx, SQLite, and OS X, while the production deployment uses Apache, MySQL, and Linux."}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"35bdead31c44","_type":"block","children":[{"_key":"696114bb93b20","_type":"span","marks":[],"text":"However, DevOps Team should design all the environments (QA/Dev/Staging/Prod) with the same technology stack to minimize these gaps. However, the configuration will differ."}],"markDefs":[],"style":"normal"},{"_key":"65df30b5c758","_type":"block","children":[{"_key":"d171422b7f5c0","_type":"span","marks":[],"text":"Now, Let’s assume you want to deploy a stable version of code (call it V1) to production and, at the same time, New feature requirement to be pushed to the Dev environment for testing(call it V2). CI/CD pipeline should deploy both deployments to the respective environment by applying the separate configuration, as illustrated in the image below. This requirement of 12 Factor has not much to do with Kubernetes as CI/CD will easily cater to this factor."}],"markDefs":[],"style":"normal"},{"_key":"a0d3ab0c2ee9","_type":"customImage","asset":{"_ref":"image-51621a00e3e0ffe17c51b8afe7464c5ac2fff77a-1584x1150-jpg","_type":"reference"}},{"_key":"42e764e3a3ac","_type":"block","children":[{"_key":"05882a78fcb0","_type":"span","marks":[],"text":"XI. Logs"}],"markDefs":[],"style":"h2"},{"_key":"7cd4a809a4b0","_type":"block","children":[{"_key":"d14bec2b97d3","_type":"span","marks":["strong","em"],"text":"Treat logs as event streams"}],"markDefs":[],"style":"blockquote"},{"_key":"6101375eca18","_type":"block","children":[{"_key":"e67f8203ead30","_type":"span","marks":[],"text":"Logging is a crucial part of any application. This factor talks about how the log should be preserve. The application should be responsible for generating logs. However, the application shouldn’t be responsible for storing, archiving, and analyzing the logs. Instead, logs should be treated as event streams. The run time environment will have to pass these streams to databases to store."}],"markDefs":[],"style":"normal"},{"_key":"f6ce27a88465","_type":"block","children":[{"_key":"7b14bee85b280","_type":"span","marks":[],"text":"While the application is logging to standard output, open-source data collectors like "},{"_key":"7b14bee85b281","_type":"span","marks":["77c80bb34f6e"],"text":"fluentd"},{"_key":"7b14bee85b282","_type":"span","marks":[],"text":" can stream them to the database like "},{"_key":"7b14bee85b283","_type":"span","marks":["0e0c155e51c3"],"text":"elastic"},{"_key":"7b14bee85b284","_type":"span","marks":[],"text":" to store, analyze, and archive."}],"markDefs":[{"_key":"77c80bb34f6e","_type":"link","href":"https://www.fluentd.org/"},{"_key":"0e0c155e51c3","_type":"link","href":"https://www.elastic.co/"}],"style":"normal"},{"_key":"a3d79ef7cfc5","_type":"block","children":[{"_key":"80d3a421a4070","_type":"span","marks":[],"text":"The complete stack of logging can be set up within the Kubernetes cluster, as illustrated in the image below, and do the job flawlessly!"}],"markDefs":[],"style":"normal"},{"_key":"8c4727af0af1","_type":"customImage","asset":{"_ref":"image-6526e9abda6507546b2522ad5a7b333d8e38095a-2292x794-jpg","_type":"reference"}},{"_key":"5f6dae7273b9","_type":"block","children":[{"_key":"7c2200dca57b","_type":"span","marks":[],"text":"XII. Admin processes"}],"markDefs":[],"style":"h2"},{"_key":"2da0fbfedf3a","_type":"block","children":[{"_key":"a99c87288d90","_type":"span","marks":["strong","em"],"text":"Run admin/management tasks as one-off processes"}],"markDefs":[],"style":"blockquote"},{"_key":"71195290430f","_type":"block","children":[{"_key":"1a6b2b0573e10","_type":"span","marks":[],"text":"This principle talks about the admin processes and management tasks, which should be part of the same pipeline as the software lifecycle. Few examples of these processes are :"}],"markDefs":[],"style":"normal"},{"Separatorr":true,"_key":"ef8bc7701a0d","_type":"separator"},{"_key":"673a5c202215","_type":"block","children":[{"_key":"0ecea6d9d70d","_type":"span","marks":[],"text":"Running database migrations"}],"markDefs":[],"style":"normal"},{"_key":"47aa094e467d","_type":"block","children":[{"_key":"928a6ee4df900","_type":"span","marks":[],"text":"Running a console to check running app’s configuration parameters"}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"0cf11aec43df","_type":"block","children":[{"_key":"be4db0fc306b0","_type":"span","marks":[],"text":"Running one-time scripts committed into the app’s repo"}],"level":1,"listItem":"bullet","markDefs":[],"style":"normal"},{"_key":"b2ff8dd37f52","_type":"block","children":[{"_key":"13b7276118960","_type":"span","marks":[],"text":"Admin processes should deploy the same way — application processes deployed in previous sections — applying all factors discussed before, such as "},{"_key":"13b7276118961","_type":"span","marks":["60b33b726b91"],"text":"release"},{"_key":"13b7276118962","_type":"span","marks":[],"text":"(factor V), using the same "},{"_key":"13b7276118963","_type":"span","marks":["17739b60ebd1"],"text":"codebase"},{"_key":"13b7276118964","_type":"span","marks":[],"text":"(Factor I), and "},{"_key":"13b7276118965","_type":"span","marks":["d1cd6d7507ea"],"text":"config"},{"_key":"13b7276118966","_type":"span","marks":[],"text":"(factor III). Admin code must ship with application code to avoid synchronization issues."}],"markDefs":[{"_key":"60b33b726b91","_type":"link","href":"https://12factor.net/build-release-run"},{"_key":"17739b60ebd1","_type":"link","href":"https://12factor.net/codebase"},{"_key":"d1cd6d7507ea","_type":"link","href":"https://12factor.net/config"}],"style":"normal"},{"_key":"8a363f985c95","_type":"customImage","asset":{"_ref":"image-836771fca8b328949d1d1ddc082a37b21631edd3-1521x1197-jpg","_type":"reference"}},{"_key":"afdf8628018f","_type":"block","children":[{"_key":"ad21d87d90b5","_type":"span","marks":[],"text":"Going beyond the Twelve-Factor App Methodology"}],"markDefs":[],"style":"h2"},{"_key":"ab2f15684815","_type":"block","children":[{"_key":"2114e7eb7eda0","_type":"span","marks":[],"text":"There are certain factors that are not included in the above TFA methodology. Take a look at these -"}],"markDefs":[],"style":"normal"},{"_key":"0b6c535159dd","_type":"block","children":[{"_key":"4077796a69450","_type":"span","marks":["strong"],"text":"Telemetry"},{"_key":"4077796a69451","_type":"span","marks":[],"text":" —This is super-important when it comes to building cloud-native applications. Telemetry involves using special equipment to take specific measurements of something and then to transmit those measurements elsewhere using radio. There is a connotation here of remoteness, distance, and intangibility to the source of the telemetry."}],"markDefs":[],"style":"normal"},{"_key":"a3938ba69ea5","_type":"block","children":[{"_key":"e01112edb5d00","_type":"span","marks":[],"text":"Cloud applications are way different than building applications on a workstation. You don’t have direct access to your cloud application reason being it could be miles away. You can’t hammer or bang it to make it run correctly when problems arise."}],"markDefs":[],"style":"normal"},{"_key":"7e20c6d6b4b2","_type":"block","children":[{"_key":"5382031d48480","_type":"span","marks":[],"text":"In such situations, you need to know the kind of telemetry you need including the kind of data and remote controls you need to make sure your product runs successfully."}],"markDefs":[],"style":"normal"},{"_key":"8f7d8bf760f4","_type":"block","children":[{"_key":"7a84b4f1c3830","_type":"span","marks":["strong"],"text":"Security, Authentication & Authorization —"},{"_key":"7a84b4f1c3831","_type":"span","marks":[],"text":" When building cloud-native applications, it is easy to ignore these 3 factors. Too often, developers just focus on the functional aspects of the product. Your product needs to be secured. There are tools like OAuth2, OpenID Connect, various SSO servers, and standards, including countless language-specific authentication and authorization libraries. Security is the #1 thing that you should focus on right from Day 1."}],"markDefs":[],"style":"normal"},{"_key":"dc463ab6e60f","_type":"block","children":[{"_key":"32ed30c4415a0","_type":"span","marks":["strong"],"text":"API First"},{"_key":"32ed30c4415a1","_type":"span","marks":[],"text":" — When you are building for the cloud, it goes without saying that your focus should be on having an app that is a participant in an ecosystem of services. You might be aware of the mobile-first approach. Similar to that API First implies that "},{"_key":"32ed30c4415a2","_type":"span","marks":["strong","em"],"text":"what you are building is an API to be consumed by client applications and services."}],"markDefs":[],"style":"normal"},{"_key":"0801dae94bde","_type":"block","children":[{"_key":"36ebf115e7040","_type":"span","marks":["strong","em"],"text":"Why do we need this?"}],"markDefs":[],"style":"normal"},{"_key":"f2f5f6fe02c2","_type":"block","children":[{"_key":"576219a0c9bf0","_type":"span","marks":["strong","em"],"text":"Well, because you don’t want integration nightmares."}],"markDefs":[],"style":"normal"},{"_key":"33910be2e0ee","_type":"block","children":[{"_key":"476ba873f7760","_type":"span","marks":[],"text":"Kevin Hoffman in his book "},{"_key":"476ba873f7761","_type":"span","marks":["8a4bbebb44e2"],"text":"Beyond the Twelve-Factor App"},{"_key":"476ba873f7762","_type":"span","marks":[],"text":" writes -"}],"markDefs":[{"_key":"8a4bbebb44e2","_type":"link","href":"https://www.oreilly.com/library/view/beyond-the-twelve-factor/9781492042631/"}],"style":"normal"},{"_key":"8371f826c709","_type":"block","children":[{"_key":"af23efc5f5510","_type":"span","marks":["em"],"text":"API first gives teams the ability to work against each other’s public contracts without interfering with internal development processes. Even if you’re not planning on building service as part of a larger ecosystem, the discipline of starting all of your development at the API level still pays enough dividends to make it worth your time."}],"markDefs":[],"style":"normal"},{"_key":"a643898f7012","_type":"block","children":[{"_key":"479262d4ff760","_type":"span","marks":[],"text":"What to use for your next project Kubernetes or Docker?"}],"markDefs":[],"style":"h2"},{"_key":"48e618438e55","_type":"block","children":[{"_key":"94ae6819d3370","_type":"span","marks":[],"text":"We tend to get many questions surrounding which one should you use. Well, I say it isn’t a question about either. These technologies can complement each other very well."}],"markDefs":[],"style":"normal"},{"_key":"0e62a9dc8840","_type":"block","children":[{"_key":"aa45b2e0eeb70","_type":"span","marks":[],"text":"A more relevant question would be docker Swarm v/s Kubernetes."}],"markDefs":[],"style":"blockquote"},{"_key":"1244ede51e85","_type":"block","children":[{"_key":"7706b8ca5bfe0","_type":"span","marks":[],"text":"Docker Swarm focuses on clustering for Docker containers. It is integrated into the Docker ecosystem and has its own API."}],"markDefs":[],"style":"normal"},{"_key":"8dfd86d11149","_type":"block","children":[{"_key":"f5d0e5e564ec0","_type":"span","marks":[],"text":"While Docker runs on a single node Kubernetes runs across a cluster. It is known for coordinating clusters of nodes efficiently."}],"markDefs":[],"style":"normal"},{"_key":"7fac211b0989","_type":"block","children":[{"_key":"8698e13766500","_type":"span","marks":[],"text":"This is an interesting talk for anyone who wants to know more on Kubernetes and Docker."}],"markDefs":[],"style":"normal"},{"_key":"e1f7743b9e5a","_type":"youtube","url":"https://youtu.be/u8dW8DrcSmo"},{"_key":"834a86d9ad90","_type":"block","children":[{"_key":"98388ac2f7ec","_type":"span","marks":[],"text":"Ending Notes"}],"markDefs":[],"style":"h4"},{"_key":"b1b35c1f3504","_type":"block","children":[{"_key":"343470125d030","_type":"span","marks":[],"text":"Developing cloud-native applications/SaaS products can be really tricky. However, using the latest methodologies, technologies, and a set of principles like the ones described above, building a world-class product is not impossible. Share your thoughts and experience in the comments. Cheers!"}],"markDefs":[],"style":"normal"}],"_rawFaq":null,"publishedAt":"2021-08-10T12:00:41.149Z","_updatedAt":"2021-09-07T10:23:16Z","readingTime":"16 Min read","altTagMainImage":null,"titleMetaData":"Kubernetes & 12-Factor Apps: How to Build 12-Factor Apps?","shortanchorlinkh2":[{"h2link":"I. Codebase","h2shorttext":"I. Codebase"},{"h2link":"II. Dependencies","h2shorttext":"II. Dependencies"},{"h2link":"III. Config","h2shorttext":"III. Config"},{"h2link":"IV. Backing services","h2shorttext":"IV. Backing services"},{"h2link":"V. Build, release, run","h2shorttext":"V. Build, release, run"},{"h2link":"VI. Processes","h2shorttext":"VI. Processes"},{"h2link":"VII. Port binding","h2shorttext":"VII. Port binding"},{"h2link":"VIII. Concurrency","h2shorttext":"VIII. Concurrency"},{"h2link":"IX. Disposability","h2shorttext":"IX. Disposability"},{"h2link":"X. Dev/prod parity","h2shorttext":"X. Dev/prod parity"},{"h2link":"XI. Logs","h2shorttext":"XI. Logs"},{"h2link":"XII. Admin processes","h2shorttext":"XII. Admin processes"}],"categories":[{"id":"61b2fbb3-23c5-54d6-aac3-bf8ba2dcecc3","title":"Blog"}],"mainImage":{"asset":{"id":"image-88d3f1c1775a96701927c068539e5fdf03f5a100-4480x2520-png","url":"https://cdn.sanity.io/images/ay6gmb6r/production/88d3f1c1775a96701927c068539e5fdf03f5a100-4480x2520.png","fluid":{"sizes":"(max-width: 800px) 100vw, 800px","src":"https://cdn.sanity.io/images/ay6gmb6r/production/88d3f1c1775a96701927c068539e5fdf03f5a100-4480x2520.png?w=800&h=450&fit=crop","srcSet":"https://cdn.sanity.io/images/ay6gmb6r/production/88d3f1c1775a96701927c068539e5fdf03f5a100-4480x2520.png?w=200&h=113&fit=crop 200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/88d3f1c1775a96701927c068539e5fdf03f5a100-4480x2520.png?w=400&h=225&fit=crop 400w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/88d3f1c1775a96701927c068539e5fdf03f5a100-4480x2520.png?w=800&h=450&fit=crop 800w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/88d3f1c1775a96701927c068539e5fdf03f5a100-4480x2520.png?w=1200&h=675&fit=crop 1200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/88d3f1c1775a96701927c068539e5fdf03f5a100-4480x2520.png?w=1600&h=900&fit=crop 1600w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/88d3f1c1775a96701927c068539e5fdf03f5a100-4480x2520.png?w=2400&h=1350&fit=crop 2400w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/88d3f1c1775a96701927c068539e5fdf03f5a100-4480x2520.png 4480w"}}},"author":{"id":"41839b4c-7970-59fe-ab1b-78a8fbe1e9d8","name":"Kintul Upadhyay","myColor":{"hex":"#2454e3"},"image":{"asset":{"_id":"image-e7e31759e107dcd9f9d409f876d67bd0d4116d79-4762x6735-png","assetId":"e7e31759e107dcd9f9d409f876d67bd0d4116d79","_type":"sanity.imageAsset","id":"image-e7e31759e107dcd9f9d409f876d67bd0d4116d79-4762x6735-png"},"_type":"image","_key":null},"slug":{"current":"kintul-upadhyay"}},"slug":{"current":"kubernetes-12-factor-apps"},"tags":[{"id":"5dce10b5-ec2c-5470-bf9d-81eba50400f4","slug":{"current":"kubernetes"},"title":"Kubernetes"},{"id":"88622e34-fe67-5f26-83fb-69aa4862c663","slug":{"current":"devops"},"title":"DevOps"}],"referenceBlogPost":[{"mainImage":{"asset":{"id":"image-41c8bbf715d6685966051dddbc85f68a6da218aa-2240x1260-png","fluid":{"src":"https://cdn.sanity.io/images/ay6gmb6r/production/41c8bbf715d6685966051dddbc85f68a6da218aa-2240x1260.png?w=800&h=450&fit=crop","srcSet":"https://cdn.sanity.io/images/ay6gmb6r/production/41c8bbf715d6685966051dddbc85f68a6da218aa-2240x1260.png?w=200&h=113&fit=crop 200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/41c8bbf715d6685966051dddbc85f68a6da218aa-2240x1260.png?w=400&h=225&fit=crop 400w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/41c8bbf715d6685966051dddbc85f68a6da218aa-2240x1260.png?w=800&h=450&fit=crop 800w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/41c8bbf715d6685966051dddbc85f68a6da218aa-2240x1260.png?w=1200&h=675&fit=crop 1200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/41c8bbf715d6685966051dddbc85f68a6da218aa-2240x1260.png?w=1600&h=900&fit=crop 1600w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/41c8bbf715d6685966051dddbc85f68a6da218aa-2240x1260.png 2240w","sizes":"(max-width: 800px) 100vw, 800px"}}},"publishedAt":"2021-08-03T12:00:00.000Z","readingTime":"10 Min read","author":{"name":"Karan Shah"},"slug":{"current":"typography-in-UI-UX-design"},"title":"Yes, Typography does shape User Experience Design"},{"mainImage":{"asset":{"id":"image-52566e987046623a25e2f40a11fa99bbd9f4d4d2-2240x1260-png","fluid":{"src":"https://cdn.sanity.io/images/ay6gmb6r/production/52566e987046623a25e2f40a11fa99bbd9f4d4d2-2240x1260.png?w=800&h=450&fit=crop","srcSet":"https://cdn.sanity.io/images/ay6gmb6r/production/52566e987046623a25e2f40a11fa99bbd9f4d4d2-2240x1260.png?w=200&h=113&fit=crop 200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/52566e987046623a25e2f40a11fa99bbd9f4d4d2-2240x1260.png?w=400&h=225&fit=crop 400w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/52566e987046623a25e2f40a11fa99bbd9f4d4d2-2240x1260.png?w=800&h=450&fit=crop 800w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/52566e987046623a25e2f40a11fa99bbd9f4d4d2-2240x1260.png?w=1200&h=675&fit=crop 1200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/52566e987046623a25e2f40a11fa99bbd9f4d4d2-2240x1260.png?w=1600&h=900&fit=crop 1600w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/52566e987046623a25e2f40a11fa99bbd9f4d4d2-2240x1260.png 2240w","sizes":"(max-width: 800px) 100vw, 800px"}}},"publishedAt":"2020-07-23T18:30:00.000Z","readingTime":"12 min read","author":{"name":"Karan Shah"},"slug":{"current":"flutter-for-web-an-ultimate-guide"},"title":"Flutter for Web: An Ultimate Guide to Creating Flutter Web Apps"}]},"readNextBlog":[{"mainImage":{"asset":{"id":"image-41c8bbf715d6685966051dddbc85f68a6da218aa-2240x1260-png","fluid":{"src":"https://cdn.sanity.io/images/ay6gmb6r/production/41c8bbf715d6685966051dddbc85f68a6da218aa-2240x1260.png?w=800&h=450&fit=crop","srcSet":"https://cdn.sanity.io/images/ay6gmb6r/production/41c8bbf715d6685966051dddbc85f68a6da218aa-2240x1260.png?w=200&h=113&fit=crop 200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/41c8bbf715d6685966051dddbc85f68a6da218aa-2240x1260.png?w=400&h=225&fit=crop 400w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/41c8bbf715d6685966051dddbc85f68a6da218aa-2240x1260.png?w=800&h=450&fit=crop 800w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/41c8bbf715d6685966051dddbc85f68a6da218aa-2240x1260.png?w=1200&h=675&fit=crop 1200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/41c8bbf715d6685966051dddbc85f68a6da218aa-2240x1260.png?w=1600&h=900&fit=crop 1600w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/41c8bbf715d6685966051dddbc85f68a6da218aa-2240x1260.png 2240w","sizes":"(max-width: 800px) 100vw, 800px"}}},"publishedAt":"2021-08-03T12:00:00.000Z","readingTime":"10 Min read","author":{"name":"Karan Shah"},"slug":{"current":"typography-in-UI-UX-design"},"title":"Yes, Typography does shape User Experience Design"},{"mainImage":{"asset":{"id":"image-52566e987046623a25e2f40a11fa99bbd9f4d4d2-2240x1260-png","fluid":{"src":"https://cdn.sanity.io/images/ay6gmb6r/production/52566e987046623a25e2f40a11fa99bbd9f4d4d2-2240x1260.png?w=800&h=450&fit=crop","srcSet":"https://cdn.sanity.io/images/ay6gmb6r/production/52566e987046623a25e2f40a11fa99bbd9f4d4d2-2240x1260.png?w=200&h=113&fit=crop 200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/52566e987046623a25e2f40a11fa99bbd9f4d4d2-2240x1260.png?w=400&h=225&fit=crop 400w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/52566e987046623a25e2f40a11fa99bbd9f4d4d2-2240x1260.png?w=800&h=450&fit=crop 800w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/52566e987046623a25e2f40a11fa99bbd9f4d4d2-2240x1260.png?w=1200&h=675&fit=crop 1200w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/52566e987046623a25e2f40a11fa99bbd9f4d4d2-2240x1260.png?w=1600&h=900&fit=crop 1600w,\nhttps://cdn.sanity.io/images/ay6gmb6r/production/52566e987046623a25e2f40a11fa99bbd9f4d4d2-2240x1260.png 2240w","sizes":"(max-width: 800px) 100vw, 800px"}}},"publishedAt":"2020-07-23T18:30:00.000Z","readingTime":"12 min read","author":{"name":"Karan Shah"},"slug":{"current":"flutter-for-web-an-ultimate-guide"},"title":"Flutter for Web: An Ultimate Guide to Creating Flutter Web Apps"}],"blogSLug":"kubernetes-12-factor-apps"}},"staticQueryHashes":["1951403926","2015784780","2763451262","3649515864","3810076356","4118766420"]}